package com.entity;

import java.util.ArrayList;
import java.util.List;

public class EcsStreetCategoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public EcsStreetCategoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStr_idIsNull() {
            addCriterion("str_id is null");
            return (Criteria) this;
        }

        public Criteria andStr_idIsNotNull() {
            addCriterion("str_id is not null");
            return (Criteria) this;
        }

        public Criteria andStr_idEqualTo(Short value) {
            addCriterion("str_id =", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idNotEqualTo(Short value) {
            addCriterion("str_id <>", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idGreaterThan(Short value) {
            addCriterion("str_id >", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idGreaterThanOrEqualTo(Short value) {
            addCriterion("str_id >=", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idLessThan(Short value) {
            addCriterion("str_id <", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idLessThanOrEqualTo(Short value) {
            addCriterion("str_id <=", value, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idIn(List<Short> values) {
            addCriterion("str_id in", values, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idNotIn(List<Short> values) {
            addCriterion("str_id not in", values, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idBetween(Short value1, Short value2) {
            addCriterion("str_id between", value1, value2, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_idNotBetween(Short value1, Short value2) {
            addCriterion("str_id not between", value1, value2, "str_id");
            return (Criteria) this;
        }

        public Criteria andStr_nameIsNull() {
            addCriterion("str_name is null");
            return (Criteria) this;
        }

        public Criteria andStr_nameIsNotNull() {
            addCriterion("str_name is not null");
            return (Criteria) this;
        }

        public Criteria andStr_nameEqualTo(String value) {
            addCriterion("str_name =", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameNotEqualTo(String value) {
            addCriterion("str_name <>", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameGreaterThan(String value) {
            addCriterion("str_name >", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameGreaterThanOrEqualTo(String value) {
            addCriterion("str_name >=", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameLessThan(String value) {
            addCriterion("str_name <", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameLessThanOrEqualTo(String value) {
            addCriterion("str_name <=", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameLike(String value) {
            addCriterion("str_name like", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameNotLike(String value) {
            addCriterion("str_name not like", value, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameIn(List<String> values) {
            addCriterion("str_name in", values, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameNotIn(List<String> values) {
            addCriterion("str_name not in", values, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameBetween(String value1, String value2) {
            addCriterion("str_name between", value1, value2, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_nameNotBetween(String value1, String value2) {
            addCriterion("str_name not between", value1, value2, "str_name");
            return (Criteria) this;
        }

        public Criteria andStr_styleIsNull() {
            addCriterion("str_style is null");
            return (Criteria) this;
        }

        public Criteria andStr_styleIsNotNull() {
            addCriterion("str_style is not null");
            return (Criteria) this;
        }

        public Criteria andStr_styleEqualTo(String value) {
            addCriterion("str_style =", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleNotEqualTo(String value) {
            addCriterion("str_style <>", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleGreaterThan(String value) {
            addCriterion("str_style >", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleGreaterThanOrEqualTo(String value) {
            addCriterion("str_style >=", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleLessThan(String value) {
            addCriterion("str_style <", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleLessThanOrEqualTo(String value) {
            addCriterion("str_style <=", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleLike(String value) {
            addCriterion("str_style like", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleNotLike(String value) {
            addCriterion("str_style not like", value, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleIn(List<String> values) {
            addCriterion("str_style in", values, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleNotIn(List<String> values) {
            addCriterion("str_style not in", values, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleBetween(String value1, String value2) {
            addCriterion("str_style between", value1, value2, "str_style");
            return (Criteria) this;
        }

        public Criteria andStr_styleNotBetween(String value1, String value2) {
            addCriterion("str_style not between", value1, value2, "str_style");
            return (Criteria) this;
        }

        public Criteria andSort_orderIsNull() {
            addCriterion("sort_order is null");
            return (Criteria) this;
        }

        public Criteria andSort_orderIsNotNull() {
            addCriterion("sort_order is not null");
            return (Criteria) this;
        }

        public Criteria andSort_orderEqualTo(Boolean value) {
            addCriterion("sort_order =", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderNotEqualTo(Boolean value) {
            addCriterion("sort_order <>", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderGreaterThan(Boolean value) {
            addCriterion("sort_order >", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderGreaterThanOrEqualTo(Boolean value) {
            addCriterion("sort_order >=", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderLessThan(Boolean value) {
            addCriterion("sort_order <", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderLessThanOrEqualTo(Boolean value) {
            addCriterion("sort_order <=", value, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderIn(List<Boolean> values) {
            addCriterion("sort_order in", values, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderNotIn(List<Boolean> values) {
            addCriterion("sort_order not in", values, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderBetween(Boolean value1, Boolean value2) {
            addCriterion("sort_order between", value1, value2, "sort_order");
            return (Criteria) this;
        }

        public Criteria andSort_orderNotBetween(Boolean value1, Boolean value2) {
            addCriterion("sort_order not between", value1, value2, "sort_order");
            return (Criteria) this;
        }

        public Criteria andIs_groomIsNull() {
            addCriterion("is_groom is null");
            return (Criteria) this;
        }

        public Criteria andIs_groomIsNotNull() {
            addCriterion("is_groom is not null");
            return (Criteria) this;
        }

        public Criteria andIs_groomEqualTo(Boolean value) {
            addCriterion("is_groom =", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomNotEqualTo(Boolean value) {
            addCriterion("is_groom <>", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomGreaterThan(Boolean value) {
            addCriterion("is_groom >", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_groom >=", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomLessThan(Boolean value) {
            addCriterion("is_groom <", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomLessThanOrEqualTo(Boolean value) {
            addCriterion("is_groom <=", value, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomIn(List<Boolean> values) {
            addCriterion("is_groom in", values, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomNotIn(List<Boolean> values) {
            addCriterion("is_groom not in", values, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomBetween(Boolean value1, Boolean value2) {
            addCriterion("is_groom between", value1, value2, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_groomNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_groom not between", value1, value2, "is_groom");
            return (Criteria) this;
        }

        public Criteria andIs_showIsNull() {
            addCriterion("is_show is null");
            return (Criteria) this;
        }

        public Criteria andIs_showIsNotNull() {
            addCriterion("is_show is not null");
            return (Criteria) this;
        }

        public Criteria andIs_showEqualTo(Boolean value) {
            addCriterion("is_show =", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showNotEqualTo(Boolean value) {
            addCriterion("is_show <>", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showGreaterThan(Boolean value) {
            addCriterion("is_show >", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_show >=", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showLessThan(Boolean value) {
            addCriterion("is_show <", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showLessThanOrEqualTo(Boolean value) {
            addCriterion("is_show <=", value, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showIn(List<Boolean> values) {
            addCriterion("is_show in", values, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showNotIn(List<Boolean> values) {
            addCriterion("is_show not in", values, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showBetween(Boolean value1, Boolean value2) {
            addCriterion("is_show between", value1, value2, "is_show");
            return (Criteria) this;
        }

        public Criteria andIs_showNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_show not between", value1, value2, "is_show");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ecs_street_category
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ecs_street_category
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}