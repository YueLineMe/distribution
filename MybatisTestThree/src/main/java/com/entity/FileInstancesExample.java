package com.entity;

import java.util.ArrayList;
import java.util.List;

public class FileInstancesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public FileInstancesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFILE_NAMEIsNull() {
            addCriterion("FILE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEIsNotNull() {
            addCriterion("FILE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEEqualTo(String value) {
            addCriterion("FILE_NAME =", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMENotEqualTo(String value) {
            addCriterion("FILE_NAME <>", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEGreaterThan(String value) {
            addCriterion("FILE_NAME >", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("FILE_NAME >=", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMELessThan(String value) {
            addCriterion("FILE_NAME <", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMELessThanOrEqualTo(String value) {
            addCriterion("FILE_NAME <=", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMELike(String value) {
            addCriterion("FILE_NAME like", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMENotLike(String value) {
            addCriterion("FILE_NAME not like", value, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEIn(List<String> values) {
            addCriterion("FILE_NAME in", values, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMENotIn(List<String> values) {
            addCriterion("FILE_NAME not in", values, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMEBetween(String value1, String value2) {
            addCriterion("FILE_NAME between", value1, value2, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andFILE_NAMENotBetween(String value1, String value2) {
            addCriterion("FILE_NAME not between", value1, value2, "FILE_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIsNull() {
            addCriterion("EVENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIsNotNull() {
            addCriterion("EVENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEEqualTo(String value) {
            addCriterion("EVENT_NAME =", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotEqualTo(String value) {
            addCriterion("EVENT_NAME <>", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEGreaterThan(String value) {
            addCriterion("EVENT_NAME >", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME >=", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELessThan(String value) {
            addCriterion("EVENT_NAME <", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELessThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME <=", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELike(String value) {
            addCriterion("EVENT_NAME like", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotLike(String value) {
            addCriterion("EVENT_NAME not like", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIn(List<String> values) {
            addCriterion("EVENT_NAME in", values, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotIn(List<String> values) {
            addCriterion("EVENT_NAME not in", values, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEBetween(String value1, String value2) {
            addCriterion("EVENT_NAME between", value1, value2, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotBetween(String value1, String value2) {
            addCriterion("EVENT_NAME not between", value1, value2, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTIsNull() {
            addCriterion("OPEN_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTIsNotNull() {
            addCriterion("OPEN_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTEqualTo(Integer value) {
            addCriterion("OPEN_COUNT =", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTNotEqualTo(Integer value) {
            addCriterion("OPEN_COUNT <>", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTGreaterThan(Integer value) {
            addCriterion("OPEN_COUNT >", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPEN_COUNT >=", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTLessThan(Integer value) {
            addCriterion("OPEN_COUNT <", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTLessThanOrEqualTo(Integer value) {
            addCriterion("OPEN_COUNT <=", value, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTIn(List<Integer> values) {
            addCriterion("OPEN_COUNT in", values, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTNotIn(List<Integer> values) {
            addCriterion("OPEN_COUNT not in", values, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTBetween(Integer value1, Integer value2) {
            addCriterion("OPEN_COUNT between", value1, value2, "OPEN_COUNT");
            return (Criteria) this;
        }

        public Criteria andOPEN_COUNTNotBetween(Integer value1, Integer value2) {
            addCriterion("OPEN_COUNT not between", value1, value2, "OPEN_COUNT");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table file_instances
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table file_instances
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}