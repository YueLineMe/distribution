package com.entity;

import java.util.ArrayList;
import java.util.List;

public class RoleEdgesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public RoleEdgesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFROM_HOSTIsNull() {
            addCriterion("FROM_HOST is null");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTIsNotNull() {
            addCriterion("FROM_HOST is not null");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTEqualTo(String value) {
            addCriterion("FROM_HOST =", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTNotEqualTo(String value) {
            addCriterion("FROM_HOST <>", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTGreaterThan(String value) {
            addCriterion("FROM_HOST >", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_HOST >=", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTLessThan(String value) {
            addCriterion("FROM_HOST <", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTLessThanOrEqualTo(String value) {
            addCriterion("FROM_HOST <=", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTLike(String value) {
            addCriterion("FROM_HOST like", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTNotLike(String value) {
            addCriterion("FROM_HOST not like", value, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTIn(List<String> values) {
            addCriterion("FROM_HOST in", values, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTNotIn(List<String> values) {
            addCriterion("FROM_HOST not in", values, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTBetween(String value1, String value2) {
            addCriterion("FROM_HOST between", value1, value2, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_HOSTNotBetween(String value1, String value2) {
            addCriterion("FROM_HOST not between", value1, value2, "FROM_HOST");
            return (Criteria) this;
        }

        public Criteria andFROM_USERIsNull() {
            addCriterion("FROM_USER is null");
            return (Criteria) this;
        }

        public Criteria andFROM_USERIsNotNull() {
            addCriterion("FROM_USER is not null");
            return (Criteria) this;
        }

        public Criteria andFROM_USEREqualTo(String value) {
            addCriterion("FROM_USER =", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERNotEqualTo(String value) {
            addCriterion("FROM_USER <>", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERGreaterThan(String value) {
            addCriterion("FROM_USER >", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_USER >=", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERLessThan(String value) {
            addCriterion("FROM_USER <", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERLessThanOrEqualTo(String value) {
            addCriterion("FROM_USER <=", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERLike(String value) {
            addCriterion("FROM_USER like", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERNotLike(String value) {
            addCriterion("FROM_USER not like", value, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERIn(List<String> values) {
            addCriterion("FROM_USER in", values, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERNotIn(List<String> values) {
            addCriterion("FROM_USER not in", values, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERBetween(String value1, String value2) {
            addCriterion("FROM_USER between", value1, value2, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andFROM_USERNotBetween(String value1, String value2) {
            addCriterion("FROM_USER not between", value1, value2, "FROM_USER");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTIsNull() {
            addCriterion("TO_HOST is null");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTIsNotNull() {
            addCriterion("TO_HOST is not null");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTEqualTo(String value) {
            addCriterion("TO_HOST =", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTNotEqualTo(String value) {
            addCriterion("TO_HOST <>", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTGreaterThan(String value) {
            addCriterion("TO_HOST >", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTGreaterThanOrEqualTo(String value) {
            addCriterion("TO_HOST >=", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTLessThan(String value) {
            addCriterion("TO_HOST <", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTLessThanOrEqualTo(String value) {
            addCriterion("TO_HOST <=", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTLike(String value) {
            addCriterion("TO_HOST like", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTNotLike(String value) {
            addCriterion("TO_HOST not like", value, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTIn(List<String> values) {
            addCriterion("TO_HOST in", values, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTNotIn(List<String> values) {
            addCriterion("TO_HOST not in", values, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTBetween(String value1, String value2) {
            addCriterion("TO_HOST between", value1, value2, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_HOSTNotBetween(String value1, String value2) {
            addCriterion("TO_HOST not between", value1, value2, "TO_HOST");
            return (Criteria) this;
        }

        public Criteria andTO_USERIsNull() {
            addCriterion("TO_USER is null");
            return (Criteria) this;
        }

        public Criteria andTO_USERIsNotNull() {
            addCriterion("TO_USER is not null");
            return (Criteria) this;
        }

        public Criteria andTO_USEREqualTo(String value) {
            addCriterion("TO_USER =", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERNotEqualTo(String value) {
            addCriterion("TO_USER <>", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERGreaterThan(String value) {
            addCriterion("TO_USER >", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERGreaterThanOrEqualTo(String value) {
            addCriterion("TO_USER >=", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERLessThan(String value) {
            addCriterion("TO_USER <", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERLessThanOrEqualTo(String value) {
            addCriterion("TO_USER <=", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERLike(String value) {
            addCriterion("TO_USER like", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERNotLike(String value) {
            addCriterion("TO_USER not like", value, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERIn(List<String> values) {
            addCriterion("TO_USER in", values, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERNotIn(List<String> values) {
            addCriterion("TO_USER not in", values, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERBetween(String value1, String value2) {
            addCriterion("TO_USER between", value1, value2, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andTO_USERNotBetween(String value1, String value2) {
            addCriterion("TO_USER not between", value1, value2, "TO_USER");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONIsNull() {
            addCriterion("WITH_ADMIN_OPTION is null");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONIsNotNull() {
            addCriterion("WITH_ADMIN_OPTION is not null");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONEqualTo(String value) {
            addCriterion("WITH_ADMIN_OPTION =", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONNotEqualTo(String value) {
            addCriterion("WITH_ADMIN_OPTION <>", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONGreaterThan(String value) {
            addCriterion("WITH_ADMIN_OPTION >", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONGreaterThanOrEqualTo(String value) {
            addCriterion("WITH_ADMIN_OPTION >=", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONLessThan(String value) {
            addCriterion("WITH_ADMIN_OPTION <", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONLessThanOrEqualTo(String value) {
            addCriterion("WITH_ADMIN_OPTION <=", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONLike(String value) {
            addCriterion("WITH_ADMIN_OPTION like", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONNotLike(String value) {
            addCriterion("WITH_ADMIN_OPTION not like", value, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONIn(List<String> values) {
            addCriterion("WITH_ADMIN_OPTION in", values, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONNotIn(List<String> values) {
            addCriterion("WITH_ADMIN_OPTION not in", values, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONBetween(String value1, String value2) {
            addCriterion("WITH_ADMIN_OPTION between", value1, value2, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }

        public Criteria andWITH_ADMIN_OPTIONNotBetween(String value1, String value2) {
            addCriterion("WITH_ADMIN_OPTION not between", value1, value2, "WITH_ADMIN_OPTION");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role_edges
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role_edges
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}