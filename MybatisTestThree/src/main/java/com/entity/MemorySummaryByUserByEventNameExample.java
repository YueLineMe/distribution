package com.entity;

import java.util.ArrayList;
import java.util.List;

public class MemorySummaryByUserByEventNameExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public MemorySummaryByUserByEventNameExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUSERIsNull() {
            addCriterion("USER is null");
            return (Criteria) this;
        }

        public Criteria andUSERIsNotNull() {
            addCriterion("USER is not null");
            return (Criteria) this;
        }

        public Criteria andUSEREqualTo(String value) {
            addCriterion("USER =", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERNotEqualTo(String value) {
            addCriterion("USER <>", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERGreaterThan(String value) {
            addCriterion("USER >", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERGreaterThanOrEqualTo(String value) {
            addCriterion("USER >=", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERLessThan(String value) {
            addCriterion("USER <", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERLessThanOrEqualTo(String value) {
            addCriterion("USER <=", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERLike(String value) {
            addCriterion("USER like", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERNotLike(String value) {
            addCriterion("USER not like", value, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERIn(List<String> values) {
            addCriterion("USER in", values, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERNotIn(List<String> values) {
            addCriterion("USER not in", values, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERBetween(String value1, String value2) {
            addCriterion("USER between", value1, value2, "USER");
            return (Criteria) this;
        }

        public Criteria andUSERNotBetween(String value1, String value2) {
            addCriterion("USER not between", value1, value2, "USER");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIsNull() {
            addCriterion("EVENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIsNotNull() {
            addCriterion("EVENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEEqualTo(String value) {
            addCriterion("EVENT_NAME =", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotEqualTo(String value) {
            addCriterion("EVENT_NAME <>", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEGreaterThan(String value) {
            addCriterion("EVENT_NAME >", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME >=", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELessThan(String value) {
            addCriterion("EVENT_NAME <", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELessThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME <=", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMELike(String value) {
            addCriterion("EVENT_NAME like", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotLike(String value) {
            addCriterion("EVENT_NAME not like", value, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEIn(List<String> values) {
            addCriterion("EVENT_NAME in", values, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotIn(List<String> values) {
            addCriterion("EVENT_NAME not in", values, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMEBetween(String value1, String value2) {
            addCriterion("EVENT_NAME between", value1, value2, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andEVENT_NAMENotBetween(String value1, String value2) {
            addCriterion("EVENT_NAME not between", value1, value2, "EVENT_NAME");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCIsNull() {
            addCriterion("COUNT_ALLOC is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCIsNotNull() {
            addCriterion("COUNT_ALLOC is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCEqualTo(Long value) {
            addCriterion("COUNT_ALLOC =", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCNotEqualTo(Long value) {
            addCriterion("COUNT_ALLOC <>", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCGreaterThan(Long value) {
            addCriterion("COUNT_ALLOC >", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_ALLOC >=", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCLessThan(Long value) {
            addCriterion("COUNT_ALLOC <", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_ALLOC <=", value, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCIn(List<Long> values) {
            addCriterion("COUNT_ALLOC in", values, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCNotIn(List<Long> values) {
            addCriterion("COUNT_ALLOC not in", values, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCBetween(Long value1, Long value2) {
            addCriterion("COUNT_ALLOC between", value1, value2, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ALLOCNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_ALLOC not between", value1, value2, "COUNT_ALLOC");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEIsNull() {
            addCriterion("COUNT_FREE is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEIsNotNull() {
            addCriterion("COUNT_FREE is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEEqualTo(Long value) {
            addCriterion("COUNT_FREE =", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREENotEqualTo(Long value) {
            addCriterion("COUNT_FREE <>", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEGreaterThan(Long value) {
            addCriterion("COUNT_FREE >", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_FREE >=", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREELessThan(Long value) {
            addCriterion("COUNT_FREE <", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREELessThanOrEqualTo(Long value) {
            addCriterion("COUNT_FREE <=", value, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEIn(List<Long> values) {
            addCriterion("COUNT_FREE in", values, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREENotIn(List<Long> values) {
            addCriterion("COUNT_FREE not in", values, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREEBetween(Long value1, Long value2) {
            addCriterion("COUNT_FREE between", value1, value2, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FREENotBetween(Long value1, Long value2) {
            addCriterion("COUNT_FREE not between", value1, value2, "COUNT_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCIsNull() {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC is null");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCIsNotNull() {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC is not null");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC =", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCNotEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC <>", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCGreaterThan(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC >", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC >=", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCLessThan(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC <", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCLessThanOrEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC <=", value, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCIn(List<Long> values) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC in", values, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCNotIn(List<Long> values) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC not in", values, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCBetween(Long value1, Long value2) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC between", value1, value2, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_ALLOCNotBetween(Long value1, Long value2) {
            addCriterion("SUM_NUMBER_OF_BYTES_ALLOC not between", value1, value2, "SUM_NUMBER_OF_BYTES_ALLOC");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEIsNull() {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE is null");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEIsNotNull() {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE is not null");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE =", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREENotEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE <>", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEGreaterThan(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE >", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE >=", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREELessThan(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE <", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREELessThanOrEqualTo(Long value) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE <=", value, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEIn(List<Long> values) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE in", values, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREENotIn(List<Long> values) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE not in", values, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREEBetween(Long value1, Long value2) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE between", value1, value2, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andSUM_NUMBER_OF_BYTES_FREENotBetween(Long value1, Long value2) {
            addCriterion("SUM_NUMBER_OF_BYTES_FREE not between", value1, value2, "SUM_NUMBER_OF_BYTES_FREE");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDIsNull() {
            addCriterion("LOW_COUNT_USED is null");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDIsNotNull() {
            addCriterion("LOW_COUNT_USED is not null");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDEqualTo(Long value) {
            addCriterion("LOW_COUNT_USED =", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDNotEqualTo(Long value) {
            addCriterion("LOW_COUNT_USED <>", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDGreaterThan(Long value) {
            addCriterion("LOW_COUNT_USED >", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("LOW_COUNT_USED >=", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDLessThan(Long value) {
            addCriterion("LOW_COUNT_USED <", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDLessThanOrEqualTo(Long value) {
            addCriterion("LOW_COUNT_USED <=", value, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDIn(List<Long> values) {
            addCriterion("LOW_COUNT_USED in", values, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDNotIn(List<Long> values) {
            addCriterion("LOW_COUNT_USED not in", values, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDBetween(Long value1, Long value2) {
            addCriterion("LOW_COUNT_USED between", value1, value2, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_COUNT_USEDNotBetween(Long value1, Long value2) {
            addCriterion("LOW_COUNT_USED not between", value1, value2, "LOW_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDIsNull() {
            addCriterion("CURRENT_COUNT_USED is null");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDIsNotNull() {
            addCriterion("CURRENT_COUNT_USED is not null");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDEqualTo(Long value) {
            addCriterion("CURRENT_COUNT_USED =", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDNotEqualTo(Long value) {
            addCriterion("CURRENT_COUNT_USED <>", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDGreaterThan(Long value) {
            addCriterion("CURRENT_COUNT_USED >", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_COUNT_USED >=", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDLessThan(Long value) {
            addCriterion("CURRENT_COUNT_USED <", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_COUNT_USED <=", value, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDIn(List<Long> values) {
            addCriterion("CURRENT_COUNT_USED in", values, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDNotIn(List<Long> values) {
            addCriterion("CURRENT_COUNT_USED not in", values, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDBetween(Long value1, Long value2) {
            addCriterion("CURRENT_COUNT_USED between", value1, value2, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_COUNT_USEDNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_COUNT_USED not between", value1, value2, "CURRENT_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDIsNull() {
            addCriterion("HIGH_COUNT_USED is null");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDIsNotNull() {
            addCriterion("HIGH_COUNT_USED is not null");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDEqualTo(Long value) {
            addCriterion("HIGH_COUNT_USED =", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDNotEqualTo(Long value) {
            addCriterion("HIGH_COUNT_USED <>", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDGreaterThan(Long value) {
            addCriterion("HIGH_COUNT_USED >", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("HIGH_COUNT_USED >=", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDLessThan(Long value) {
            addCriterion("HIGH_COUNT_USED <", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDLessThanOrEqualTo(Long value) {
            addCriterion("HIGH_COUNT_USED <=", value, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDIn(List<Long> values) {
            addCriterion("HIGH_COUNT_USED in", values, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDNotIn(List<Long> values) {
            addCriterion("HIGH_COUNT_USED not in", values, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDBetween(Long value1, Long value2) {
            addCriterion("HIGH_COUNT_USED between", value1, value2, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_COUNT_USEDNotBetween(Long value1, Long value2) {
            addCriterion("HIGH_COUNT_USED not between", value1, value2, "HIGH_COUNT_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDIsNull() {
            addCriterion("LOW_NUMBER_OF_BYTES_USED is null");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDIsNotNull() {
            addCriterion("LOW_NUMBER_OF_BYTES_USED is not null");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDEqualTo(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED =", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDNotEqualTo(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED <>", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDGreaterThan(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED >", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED >=", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDLessThan(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED <", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDLessThanOrEqualTo(Long value) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED <=", value, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDIn(List<Long> values) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED in", values, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDNotIn(List<Long> values) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED not in", values, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDBetween(Long value1, Long value2) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED between", value1, value2, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andLOW_NUMBER_OF_BYTES_USEDNotBetween(Long value1, Long value2) {
            addCriterion("LOW_NUMBER_OF_BYTES_USED not between", value1, value2, "LOW_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDIsNull() {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED is null");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDIsNotNull() {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED is not null");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDEqualTo(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED =", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDNotEqualTo(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED <>", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDGreaterThan(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED >", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED >=", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDLessThan(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED <", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED <=", value, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDIn(List<Long> values) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED in", values, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDNotIn(List<Long> values) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED not in", values, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDBetween(Long value1, Long value2) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED between", value1, value2, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andCURRENT_NUMBER_OF_BYTES_USEDNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_NUMBER_OF_BYTES_USED not between", value1, value2, "CURRENT_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDIsNull() {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED is null");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDIsNotNull() {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED is not null");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDEqualTo(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED =", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDNotEqualTo(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED <>", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDGreaterThan(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED >", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDGreaterThanOrEqualTo(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED >=", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDLessThan(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED <", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDLessThanOrEqualTo(Long value) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED <=", value, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDIn(List<Long> values) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED in", values, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDNotIn(List<Long> values) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED not in", values, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDBetween(Long value1, Long value2) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED between", value1, value2, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }

        public Criteria andHIGH_NUMBER_OF_BYTES_USEDNotBetween(Long value1, Long value2) {
            addCriterion("HIGH_NUMBER_OF_BYTES_USED not between", value1, value2, "HIGH_NUMBER_OF_BYTES_USED");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory_summary_by_user_by_event_name
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}