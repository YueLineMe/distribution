package com.entity;

import java.util.ArrayList;
import java.util.List;

public class SetupInstrumentsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public SetupInstrumentsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andENABLEDIsNull() {
            addCriterion("ENABLED is null");
            return (Criteria) this;
        }

        public Criteria andENABLEDIsNotNull() {
            addCriterion("ENABLED is not null");
            return (Criteria) this;
        }

        public Criteria andENABLEDEqualTo(String value) {
            addCriterion("ENABLED =", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDNotEqualTo(String value) {
            addCriterion("ENABLED <>", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDGreaterThan(String value) {
            addCriterion("ENABLED >", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDGreaterThanOrEqualTo(String value) {
            addCriterion("ENABLED >=", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDLessThan(String value) {
            addCriterion("ENABLED <", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDLessThanOrEqualTo(String value) {
            addCriterion("ENABLED <=", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDLike(String value) {
            addCriterion("ENABLED like", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDNotLike(String value) {
            addCriterion("ENABLED not like", value, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDIn(List<String> values) {
            addCriterion("ENABLED in", values, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDNotIn(List<String> values) {
            addCriterion("ENABLED not in", values, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDBetween(String value1, String value2) {
            addCriterion("ENABLED between", value1, value2, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andENABLEDNotBetween(String value1, String value2) {
            addCriterion("ENABLED not between", value1, value2, "ENABLED");
            return (Criteria) this;
        }

        public Criteria andTIMEDIsNull() {
            addCriterion("TIMED is null");
            return (Criteria) this;
        }

        public Criteria andTIMEDIsNotNull() {
            addCriterion("TIMED is not null");
            return (Criteria) this;
        }

        public Criteria andTIMEDEqualTo(String value) {
            addCriterion("TIMED =", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDNotEqualTo(String value) {
            addCriterion("TIMED <>", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDGreaterThan(String value) {
            addCriterion("TIMED >", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDGreaterThanOrEqualTo(String value) {
            addCriterion("TIMED >=", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDLessThan(String value) {
            addCriterion("TIMED <", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDLessThanOrEqualTo(String value) {
            addCriterion("TIMED <=", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDLike(String value) {
            addCriterion("TIMED like", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDNotLike(String value) {
            addCriterion("TIMED not like", value, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDIn(List<String> values) {
            addCriterion("TIMED in", values, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDNotIn(List<String> values) {
            addCriterion("TIMED not in", values, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDBetween(String value1, String value2) {
            addCriterion("TIMED between", value1, value2, "TIMED");
            return (Criteria) this;
        }

        public Criteria andTIMEDNotBetween(String value1, String value2) {
            addCriterion("TIMED not between", value1, value2, "TIMED");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESIsNull() {
            addCriterion("PROPERTIES is null");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESIsNotNull() {
            addCriterion("PROPERTIES is not null");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESEqualTo(String value) {
            addCriterion("PROPERTIES =", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESNotEqualTo(String value) {
            addCriterion("PROPERTIES <>", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESGreaterThan(String value) {
            addCriterion("PROPERTIES >", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTIES >=", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESLessThan(String value) {
            addCriterion("PROPERTIES <", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESLessThanOrEqualTo(String value) {
            addCriterion("PROPERTIES <=", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESLike(String value) {
            addCriterion("PROPERTIES like", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESNotLike(String value) {
            addCriterion("PROPERTIES not like", value, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESIn(List<String> values) {
            addCriterion("PROPERTIES in", values, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESNotIn(List<String> values) {
            addCriterion("PROPERTIES not in", values, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESBetween(String value1, String value2) {
            addCriterion("PROPERTIES between", value1, value2, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andPROPERTIESNotBetween(String value1, String value2) {
            addCriterion("PROPERTIES not between", value1, value2, "PROPERTIES");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYIsNull() {
            addCriterion("VOLATILITY is null");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYIsNotNull() {
            addCriterion("VOLATILITY is not null");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYEqualTo(Integer value) {
            addCriterion("VOLATILITY =", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYNotEqualTo(Integer value) {
            addCriterion("VOLATILITY <>", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYGreaterThan(Integer value) {
            addCriterion("VOLATILITY >", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYGreaterThanOrEqualTo(Integer value) {
            addCriterion("VOLATILITY >=", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYLessThan(Integer value) {
            addCriterion("VOLATILITY <", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYLessThanOrEqualTo(Integer value) {
            addCriterion("VOLATILITY <=", value, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYIn(List<Integer> values) {
            addCriterion("VOLATILITY in", values, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYNotIn(List<Integer> values) {
            addCriterion("VOLATILITY not in", values, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYBetween(Integer value1, Integer value2) {
            addCriterion("VOLATILITY between", value1, value2, "VOLATILITY");
            return (Criteria) this;
        }

        public Criteria andVOLATILITYNotBetween(Integer value1, Integer value2) {
            addCriterion("VOLATILITY not between", value1, value2, "VOLATILITY");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table setup_instruments
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table setup_instruments
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}