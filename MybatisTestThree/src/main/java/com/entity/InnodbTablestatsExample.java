package com.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class InnodbTableStatsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public InnodbTableStatsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDatabase_nameIsNull() {
            addCriterion("database_name is null");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameIsNotNull() {
            addCriterion("database_name is not null");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameEqualTo(String value) {
            addCriterion("database_name =", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameNotEqualTo(String value) {
            addCriterion("database_name <>", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameGreaterThan(String value) {
            addCriterion("database_name >", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameGreaterThanOrEqualTo(String value) {
            addCriterion("database_name >=", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameLessThan(String value) {
            addCriterion("database_name <", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameLessThanOrEqualTo(String value) {
            addCriterion("database_name <=", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameLike(String value) {
            addCriterion("database_name like", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameNotLike(String value) {
            addCriterion("database_name not like", value, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameIn(List<String> values) {
            addCriterion("database_name in", values, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameNotIn(List<String> values) {
            addCriterion("database_name not in", values, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameBetween(String value1, String value2) {
            addCriterion("database_name between", value1, value2, "database_name");
            return (Criteria) this;
        }

        public Criteria andDatabase_nameNotBetween(String value1, String value2) {
            addCriterion("database_name not between", value1, value2, "database_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameIsNull() {
            addCriterion("table_name is null");
            return (Criteria) this;
        }

        public Criteria andTable_nameIsNotNull() {
            addCriterion("table_name is not null");
            return (Criteria) this;
        }

        public Criteria andTable_nameEqualTo(String value) {
            addCriterion("table_name =", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotEqualTo(String value) {
            addCriterion("table_name <>", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameGreaterThan(String value) {
            addCriterion("table_name >", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameGreaterThanOrEqualTo(String value) {
            addCriterion("table_name >=", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLessThan(String value) {
            addCriterion("table_name <", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLessThanOrEqualTo(String value) {
            addCriterion("table_name <=", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLike(String value) {
            addCriterion("table_name like", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotLike(String value) {
            addCriterion("table_name not like", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameIn(List<String> values) {
            addCriterion("table_name in", values, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotIn(List<String> values) {
            addCriterion("table_name not in", values, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameBetween(String value1, String value2) {
            addCriterion("table_name between", value1, value2, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotBetween(String value1, String value2) {
            addCriterion("table_name not between", value1, value2, "table_name");
            return (Criteria) this;
        }

        public Criteria andLast_updateIsNull() {
            addCriterion("last_update is null");
            return (Criteria) this;
        }

        public Criteria andLast_updateIsNotNull() {
            addCriterion("last_update is not null");
            return (Criteria) this;
        }

        public Criteria andLast_updateEqualTo(Date value) {
            addCriterion("last_update =", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateNotEqualTo(Date value) {
            addCriterion("last_update <>", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateGreaterThan(Date value) {
            addCriterion("last_update >", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateGreaterThanOrEqualTo(Date value) {
            addCriterion("last_update >=", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateLessThan(Date value) {
            addCriterion("last_update <", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateLessThanOrEqualTo(Date value) {
            addCriterion("last_update <=", value, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateIn(List<Date> values) {
            addCriterion("last_update in", values, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateNotIn(List<Date> values) {
            addCriterion("last_update not in", values, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateBetween(Date value1, Date value2) {
            addCriterion("last_update between", value1, value2, "last_update");
            return (Criteria) this;
        }

        public Criteria andLast_updateNotBetween(Date value1, Date value2) {
            addCriterion("last_update not between", value1, value2, "last_update");
            return (Criteria) this;
        }

        public Criteria andN_rowsIsNull() {
            addCriterion("n_rows is null");
            return (Criteria) this;
        }

        public Criteria andN_rowsIsNotNull() {
            addCriterion("n_rows is not null");
            return (Criteria) this;
        }

        public Criteria andN_rowsEqualTo(Long value) {
            addCriterion("n_rows =", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsNotEqualTo(Long value) {
            addCriterion("n_rows <>", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsGreaterThan(Long value) {
            addCriterion("n_rows >", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsGreaterThanOrEqualTo(Long value) {
            addCriterion("n_rows >=", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsLessThan(Long value) {
            addCriterion("n_rows <", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsLessThanOrEqualTo(Long value) {
            addCriterion("n_rows <=", value, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsIn(List<Long> values) {
            addCriterion("n_rows in", values, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsNotIn(List<Long> values) {
            addCriterion("n_rows not in", values, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsBetween(Long value1, Long value2) {
            addCriterion("n_rows between", value1, value2, "n_rows");
            return (Criteria) this;
        }

        public Criteria andN_rowsNotBetween(Long value1, Long value2) {
            addCriterion("n_rows not between", value1, value2, "n_rows");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeIsNull() {
            addCriterion("clustered_index_size is null");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeIsNotNull() {
            addCriterion("clustered_index_size is not null");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeEqualTo(Long value) {
            addCriterion("clustered_index_size =", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeNotEqualTo(Long value) {
            addCriterion("clustered_index_size <>", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeGreaterThan(Long value) {
            addCriterion("clustered_index_size >", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeGreaterThanOrEqualTo(Long value) {
            addCriterion("clustered_index_size >=", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeLessThan(Long value) {
            addCriterion("clustered_index_size <", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeLessThanOrEqualTo(Long value) {
            addCriterion("clustered_index_size <=", value, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeIn(List<Long> values) {
            addCriterion("clustered_index_size in", values, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeNotIn(List<Long> values) {
            addCriterion("clustered_index_size not in", values, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeBetween(Long value1, Long value2) {
            addCriterion("clustered_index_size between", value1, value2, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andClustered_index_sizeNotBetween(Long value1, Long value2) {
            addCriterion("clustered_index_size not between", value1, value2, "clustered_index_size");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesIsNull() {
            addCriterion("sum_of_other_index_sizes is null");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesIsNotNull() {
            addCriterion("sum_of_other_index_sizes is not null");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesEqualTo(Long value) {
            addCriterion("sum_of_other_index_sizes =", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesNotEqualTo(Long value) {
            addCriterion("sum_of_other_index_sizes <>", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesGreaterThan(Long value) {
            addCriterion("sum_of_other_index_sizes >", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesGreaterThanOrEqualTo(Long value) {
            addCriterion("sum_of_other_index_sizes >=", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesLessThan(Long value) {
            addCriterion("sum_of_other_index_sizes <", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesLessThanOrEqualTo(Long value) {
            addCriterion("sum_of_other_index_sizes <=", value, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesIn(List<Long> values) {
            addCriterion("sum_of_other_index_sizes in", values, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesNotIn(List<Long> values) {
            addCriterion("sum_of_other_index_sizes not in", values, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesBetween(Long value1, Long value2) {
            addCriterion("sum_of_other_index_sizes between", value1, value2, "sum_of_other_index_sizes");
            return (Criteria) this;
        }

        public Criteria andSum_of_other_index_sizesNotBetween(Long value1, Long value2) {
            addCriterion("sum_of_other_index_sizes not between", value1, value2, "sum_of_other_index_sizes");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table innodb_table_stats
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table innodb_table_stats
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}