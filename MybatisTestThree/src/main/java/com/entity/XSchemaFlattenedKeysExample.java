package com.entity;

import java.util.ArrayList;
import java.util.List;

public class XSchemaFlattenedKeysExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public XSchemaFlattenedKeysExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTable_schemaIsNull() {
            addCriterion("table_schema is null");
            return (Criteria) this;
        }

        public Criteria andTable_schemaIsNotNull() {
            addCriterion("table_schema is not null");
            return (Criteria) this;
        }

        public Criteria andTable_schemaEqualTo(String value) {
            addCriterion("table_schema =", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaNotEqualTo(String value) {
            addCriterion("table_schema <>", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaGreaterThan(String value) {
            addCriterion("table_schema >", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaGreaterThanOrEqualTo(String value) {
            addCriterion("table_schema >=", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaLessThan(String value) {
            addCriterion("table_schema <", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaLessThanOrEqualTo(String value) {
            addCriterion("table_schema <=", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaLike(String value) {
            addCriterion("table_schema like", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaNotLike(String value) {
            addCriterion("table_schema not like", value, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaIn(List<String> values) {
            addCriterion("table_schema in", values, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaNotIn(List<String> values) {
            addCriterion("table_schema not in", values, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaBetween(String value1, String value2) {
            addCriterion("table_schema between", value1, value2, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_schemaNotBetween(String value1, String value2) {
            addCriterion("table_schema not between", value1, value2, "table_schema");
            return (Criteria) this;
        }

        public Criteria andTable_nameIsNull() {
            addCriterion("table_name is null");
            return (Criteria) this;
        }

        public Criteria andTable_nameIsNotNull() {
            addCriterion("table_name is not null");
            return (Criteria) this;
        }

        public Criteria andTable_nameEqualTo(String value) {
            addCriterion("table_name =", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotEqualTo(String value) {
            addCriterion("table_name <>", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameGreaterThan(String value) {
            addCriterion("table_name >", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameGreaterThanOrEqualTo(String value) {
            addCriterion("table_name >=", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLessThan(String value) {
            addCriterion("table_name <", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLessThanOrEqualTo(String value) {
            addCriterion("table_name <=", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameLike(String value) {
            addCriterion("table_name like", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotLike(String value) {
            addCriterion("table_name not like", value, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameIn(List<String> values) {
            addCriterion("table_name in", values, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotIn(List<String> values) {
            addCriterion("table_name not in", values, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameBetween(String value1, String value2) {
            addCriterion("table_name between", value1, value2, "table_name");
            return (Criteria) this;
        }

        public Criteria andTable_nameNotBetween(String value1, String value2) {
            addCriterion("table_name not between", value1, value2, "table_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameIsNull() {
            addCriterion("index_name is null");
            return (Criteria) this;
        }

        public Criteria andIndex_nameIsNotNull() {
            addCriterion("index_name is not null");
            return (Criteria) this;
        }

        public Criteria andIndex_nameEqualTo(String value) {
            addCriterion("index_name =", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameNotEqualTo(String value) {
            addCriterion("index_name <>", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameGreaterThan(String value) {
            addCriterion("index_name >", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameGreaterThanOrEqualTo(String value) {
            addCriterion("index_name >=", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameLessThan(String value) {
            addCriterion("index_name <", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameLessThanOrEqualTo(String value) {
            addCriterion("index_name <=", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameLike(String value) {
            addCriterion("index_name like", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameNotLike(String value) {
            addCriterion("index_name not like", value, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameIn(List<String> values) {
            addCriterion("index_name in", values, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameNotIn(List<String> values) {
            addCriterion("index_name not in", values, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameBetween(String value1, String value2) {
            addCriterion("index_name between", value1, value2, "index_name");
            return (Criteria) this;
        }

        public Criteria andIndex_nameNotBetween(String value1, String value2) {
            addCriterion("index_name not between", value1, value2, "index_name");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueIsNull() {
            addCriterion("non_unique is null");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueIsNotNull() {
            addCriterion("non_unique is not null");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueEqualTo(Integer value) {
            addCriterion("non_unique =", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueNotEqualTo(Integer value) {
            addCriterion("non_unique <>", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueGreaterThan(Integer value) {
            addCriterion("non_unique >", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueGreaterThanOrEqualTo(Integer value) {
            addCriterion("non_unique >=", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueLessThan(Integer value) {
            addCriterion("non_unique <", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueLessThanOrEqualTo(Integer value) {
            addCriterion("non_unique <=", value, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueIn(List<Integer> values) {
            addCriterion("non_unique in", values, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueNotIn(List<Integer> values) {
            addCriterion("non_unique not in", values, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueBetween(Integer value1, Integer value2) {
            addCriterion("non_unique between", value1, value2, "non_unique");
            return (Criteria) this;
        }

        public Criteria andNon_uniqueNotBetween(Integer value1, Integer value2) {
            addCriterion("non_unique not between", value1, value2, "non_unique");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsIsNull() {
            addCriterion("subpart_exists is null");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsIsNotNull() {
            addCriterion("subpart_exists is not null");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsEqualTo(Long value) {
            addCriterion("subpart_exists =", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsNotEqualTo(Long value) {
            addCriterion("subpart_exists <>", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsGreaterThan(Long value) {
            addCriterion("subpart_exists >", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsGreaterThanOrEqualTo(Long value) {
            addCriterion("subpart_exists >=", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsLessThan(Long value) {
            addCriterion("subpart_exists <", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsLessThanOrEqualTo(Long value) {
            addCriterion("subpart_exists <=", value, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsIn(List<Long> values) {
            addCriterion("subpart_exists in", values, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsNotIn(List<Long> values) {
            addCriterion("subpart_exists not in", values, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsBetween(Long value1, Long value2) {
            addCriterion("subpart_exists between", value1, value2, "subpart_exists");
            return (Criteria) this;
        }

        public Criteria andSubpart_existsNotBetween(Long value1, Long value2) {
            addCriterion("subpart_exists not between", value1, value2, "subpart_exists");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$schema_flattened_keys
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}