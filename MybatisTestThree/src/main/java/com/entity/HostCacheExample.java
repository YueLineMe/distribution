package com.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HostCacheExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public HostCacheExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIPIsNull() {
            addCriterion("IP is null");
            return (Criteria) this;
        }

        public Criteria andIPIsNotNull() {
            addCriterion("IP is not null");
            return (Criteria) this;
        }

        public Criteria andIPEqualTo(String value) {
            addCriterion("IP =", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotEqualTo(String value) {
            addCriterion("IP <>", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPGreaterThan(String value) {
            addCriterion("IP >", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPGreaterThanOrEqualTo(String value) {
            addCriterion("IP >=", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLessThan(String value) {
            addCriterion("IP <", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLessThanOrEqualTo(String value) {
            addCriterion("IP <=", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLike(String value) {
            addCriterion("IP like", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotLike(String value) {
            addCriterion("IP not like", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPIn(List<String> values) {
            addCriterion("IP in", values, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotIn(List<String> values) {
            addCriterion("IP not in", values, "IP");
            return (Criteria) this;
        }

        public Criteria andIPBetween(String value1, String value2) {
            addCriterion("IP between", value1, value2, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotBetween(String value1, String value2) {
            addCriterion("IP not between", value1, value2, "IP");
            return (Criteria) this;
        }

        public Criteria andHOSTIsNull() {
            addCriterion("HOST is null");
            return (Criteria) this;
        }

        public Criteria andHOSTIsNotNull() {
            addCriterion("HOST is not null");
            return (Criteria) this;
        }

        public Criteria andHOSTEqualTo(String value) {
            addCriterion("HOST =", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTNotEqualTo(String value) {
            addCriterion("HOST <>", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTGreaterThan(String value) {
            addCriterion("HOST >", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTGreaterThanOrEqualTo(String value) {
            addCriterion("HOST >=", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTLessThan(String value) {
            addCriterion("HOST <", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTLessThanOrEqualTo(String value) {
            addCriterion("HOST <=", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTLike(String value) {
            addCriterion("HOST like", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTNotLike(String value) {
            addCriterion("HOST not like", value, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTIn(List<String> values) {
            addCriterion("HOST in", values, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTNotIn(List<String> values) {
            addCriterion("HOST not in", values, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTBetween(String value1, String value2) {
            addCriterion("HOST between", value1, value2, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOSTNotBetween(String value1, String value2) {
            addCriterion("HOST not between", value1, value2, "HOST");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDIsNull() {
            addCriterion("HOST_VALIDATED is null");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDIsNotNull() {
            addCriterion("HOST_VALIDATED is not null");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDEqualTo(String value) {
            addCriterion("HOST_VALIDATED =", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDNotEqualTo(String value) {
            addCriterion("HOST_VALIDATED <>", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDGreaterThan(String value) {
            addCriterion("HOST_VALIDATED >", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDGreaterThanOrEqualTo(String value) {
            addCriterion("HOST_VALIDATED >=", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDLessThan(String value) {
            addCriterion("HOST_VALIDATED <", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDLessThanOrEqualTo(String value) {
            addCriterion("HOST_VALIDATED <=", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDLike(String value) {
            addCriterion("HOST_VALIDATED like", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDNotLike(String value) {
            addCriterion("HOST_VALIDATED not like", value, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDIn(List<String> values) {
            addCriterion("HOST_VALIDATED in", values, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDNotIn(List<String> values) {
            addCriterion("HOST_VALIDATED not in", values, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDBetween(String value1, String value2) {
            addCriterion("HOST_VALIDATED between", value1, value2, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andHOST_VALIDATEDNotBetween(String value1, String value2) {
            addCriterion("HOST_VALIDATED not between", value1, value2, "HOST_VALIDATED");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSIsNull() {
            addCriterion("SUM_CONNECT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSIsNotNull() {
            addCriterion("SUM_CONNECT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSEqualTo(Long value) {
            addCriterion("SUM_CONNECT_ERRORS =", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSNotEqualTo(Long value) {
            addCriterion("SUM_CONNECT_ERRORS <>", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSGreaterThan(Long value) {
            addCriterion("SUM_CONNECT_ERRORS >", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_CONNECT_ERRORS >=", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSLessThan(Long value) {
            addCriterion("SUM_CONNECT_ERRORS <", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("SUM_CONNECT_ERRORS <=", value, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSIn(List<Long> values) {
            addCriterion("SUM_CONNECT_ERRORS in", values, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSNotIn(List<Long> values) {
            addCriterion("SUM_CONNECT_ERRORS not in", values, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("SUM_CONNECT_ERRORS between", value1, value2, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andSUM_CONNECT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("SUM_CONNECT_ERRORS not between", value1, value2, "SUM_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSIsNull() {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSIsNotNull() {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS =", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS <>", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS >", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS >=", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSLessThan(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS <", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS <=", value, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS in", values, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS not in", values, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS between", value1, value2, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_BLOCKED_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_HOST_BLOCKED_ERRORS not between", value1, value2, "COUNT_HOST_BLOCKED_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSIsNull() {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSIsNotNull() {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS =", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS <>", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS >", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS >=", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS <", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS <=", value, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS in", values, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS not in", values, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS between", value1, value2, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_TRANSIENT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_NAMEINFO_TRANSIENT_ERRORS not between", value1, value2, "COUNT_NAMEINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSIsNull() {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSIsNotNull() {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS =", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS <>", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS >", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS >=", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS <", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS <=", value, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS in", values, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS not in", values, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS between", value1, value2, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NAMEINFO_PERMANENT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_NAMEINFO_PERMANENT_ERRORS not between", value1, value2, "COUNT_NAMEINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSIsNull() {
            addCriterion("COUNT_FORMAT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSIsNotNull() {
            addCriterion("COUNT_FORMAT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS =", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS <>", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS >", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS >=", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS <", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_FORMAT_ERRORS <=", value, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_FORMAT_ERRORS in", values, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_FORMAT_ERRORS not in", values, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_FORMAT_ERRORS between", value1, value2, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FORMAT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_FORMAT_ERRORS not between", value1, value2, "COUNT_FORMAT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSIsNull() {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSIsNotNull() {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS =", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS <>", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS >", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS >=", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS <", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS <=", value, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS in", values, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS not in", values, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS between", value1, value2, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_TRANSIENT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_ADDRINFO_TRANSIENT_ERRORS not between", value1, value2, "COUNT_ADDRINFO_TRANSIENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSIsNull() {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSIsNotNull() {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS =", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS <>", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS >", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS >=", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS <", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS <=", value, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS in", values, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS not in", values, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS between", value1, value2, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_ADDRINFO_PERMANENT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_ADDRINFO_PERMANENT_ERRORS not between", value1, value2, "COUNT_ADDRINFO_PERMANENT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSIsNull() {
            addCriterion("COUNT_FCRDNS_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSIsNotNull() {
            addCriterion("COUNT_FCRDNS_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS =", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS <>", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS >", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS >=", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSLessThan(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS <", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_FCRDNS_ERRORS <=", value, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_FCRDNS_ERRORS in", values, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_FCRDNS_ERRORS not in", values, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_FCRDNS_ERRORS between", value1, value2, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_FCRDNS_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_FCRDNS_ERRORS not between", value1, value2, "COUNT_FCRDNS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSIsNull() {
            addCriterion("COUNT_HOST_ACL_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSIsNotNull() {
            addCriterion("COUNT_HOST_ACL_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS =", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS <>", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS >", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS >=", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSLessThan(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS <", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_HOST_ACL_ERRORS <=", value, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_HOST_ACL_ERRORS in", values, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_HOST_ACL_ERRORS not in", values, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_HOST_ACL_ERRORS between", value1, value2, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HOST_ACL_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_HOST_ACL_ERRORS not between", value1, value2, "COUNT_HOST_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSIsNull() {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSIsNotNull() {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS =", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS <>", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS >", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS >=", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSLessThan(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS <", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS <=", value, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS in", values, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS not in", values, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS between", value1, value2, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_NO_AUTH_PLUGIN_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_NO_AUTH_PLUGIN_ERRORS not between", value1, value2, "COUNT_NO_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSIsNull() {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSIsNotNull() {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS =", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS <>", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS >", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS >=", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSLessThan(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS <", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS <=", value, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS in", values, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS not in", values, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS between", value1, value2, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTH_PLUGIN_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_AUTH_PLUGIN_ERRORS not between", value1, value2, "COUNT_AUTH_PLUGIN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSIsNull() {
            addCriterion("COUNT_HANDSHAKE_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSIsNotNull() {
            addCriterion("COUNT_HANDSHAKE_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS =", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS <>", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS >", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS >=", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSLessThan(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS <", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_HANDSHAKE_ERRORS <=", value, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_HANDSHAKE_ERRORS in", values, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_HANDSHAKE_ERRORS not in", values, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_HANDSHAKE_ERRORS between", value1, value2, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_HANDSHAKE_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_HANDSHAKE_ERRORS not between", value1, value2, "COUNT_HANDSHAKE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSIsNull() {
            addCriterion("COUNT_PROXY_USER_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSIsNotNull() {
            addCriterion("COUNT_PROXY_USER_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS =", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS <>", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS >", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS >=", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSLessThan(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS <", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ERRORS <=", value, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_PROXY_USER_ERRORS in", values, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_PROXY_USER_ERRORS not in", values, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_PROXY_USER_ERRORS between", value1, value2, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_PROXY_USER_ERRORS not between", value1, value2, "COUNT_PROXY_USER_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSIsNull() {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSIsNotNull() {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS =", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS <>", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS >", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS >=", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSLessThan(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS <", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS <=", value, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS in", values, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS not in", values, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS between", value1, value2, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_PROXY_USER_ACL_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_PROXY_USER_ACL_ERRORS not between", value1, value2, "COUNT_PROXY_USER_ACL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSIsNull() {
            addCriterion("COUNT_AUTHENTICATION_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSIsNotNull() {
            addCriterion("COUNT_AUTHENTICATION_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS =", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS <>", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS >", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS >=", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSLessThan(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS <", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS <=", value, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS in", values, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS not in", values, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS between", value1, value2, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_AUTHENTICATION_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_AUTHENTICATION_ERRORS not between", value1, value2, "COUNT_AUTHENTICATION_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSIsNull() {
            addCriterion("COUNT_SSL_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSIsNotNull() {
            addCriterion("COUNT_SSL_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_SSL_ERRORS =", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_SSL_ERRORS <>", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_SSL_ERRORS >", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_SSL_ERRORS >=", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSLessThan(Long value) {
            addCriterion("COUNT_SSL_ERRORS <", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_SSL_ERRORS <=", value, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_SSL_ERRORS in", values, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_SSL_ERRORS not in", values, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_SSL_ERRORS between", value1, value2, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_SSL_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_SSL_ERRORS not between", value1, value2, "COUNT_SSL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSIsNull() {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSIsNotNull() {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS =", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS <>", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS >", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS >=", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSLessThan(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS <", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS <=", value, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS in", values, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS not in", values, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS between", value1, value2, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_ERRORS not between", value1, value2, "COUNT_MAX_USER_CONNECTIONS_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSIsNull() {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSIsNotNull() {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS =", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS <>", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS >", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS >=", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSLessThan(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS <", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS <=", value, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS in", values, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS not in", values, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS between", value1, value2, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS not between", value1, value2, "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSIsNull() {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSIsNotNull() {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS =", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS <>", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS >", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS >=", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSLessThan(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS <", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS <=", value, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS in", values, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS not in", values, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS between", value1, value2, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_DEFAULT_DATABASE_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_DEFAULT_DATABASE_ERRORS not between", value1, value2, "COUNT_DEFAULT_DATABASE_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSIsNull() {
            addCriterion("COUNT_INIT_CONNECT_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSIsNotNull() {
            addCriterion("COUNT_INIT_CONNECT_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS =", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS <>", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS >", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS >=", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSLessThan(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS <", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS <=", value, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS in", values, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS not in", values, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS between", value1, value2, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_INIT_CONNECT_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_INIT_CONNECT_ERRORS not between", value1, value2, "COUNT_INIT_CONNECT_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSIsNull() {
            addCriterion("COUNT_LOCAL_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSIsNotNull() {
            addCriterion("COUNT_LOCAL_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS =", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS <>", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS >", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS >=", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSLessThan(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS <", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_LOCAL_ERRORS <=", value, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_LOCAL_ERRORS in", values, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_LOCAL_ERRORS not in", values, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_LOCAL_ERRORS between", value1, value2, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_LOCAL_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_LOCAL_ERRORS not between", value1, value2, "COUNT_LOCAL_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSIsNull() {
            addCriterion("COUNT_UNKNOWN_ERRORS is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSIsNotNull() {
            addCriterion("COUNT_UNKNOWN_ERRORS is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSEqualTo(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS =", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSNotEqualTo(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS <>", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSGreaterThan(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS >", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS >=", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSLessThan(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS <", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_UNKNOWN_ERRORS <=", value, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSIn(List<Long> values) {
            addCriterion("COUNT_UNKNOWN_ERRORS in", values, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSNotIn(List<Long> values) {
            addCriterion("COUNT_UNKNOWN_ERRORS not in", values, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSBetween(Long value1, Long value2) {
            addCriterion("COUNT_UNKNOWN_ERRORS between", value1, value2, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andCOUNT_UNKNOWN_ERRORSNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_UNKNOWN_ERRORS not between", value1, value2, "COUNT_UNKNOWN_ERRORS");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENIsNull() {
            addCriterion("FIRST_SEEN is null");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENIsNotNull() {
            addCriterion("FIRST_SEEN is not null");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENEqualTo(Date value) {
            addCriterion("FIRST_SEEN =", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENNotEqualTo(Date value) {
            addCriterion("FIRST_SEEN <>", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENGreaterThan(Date value) {
            addCriterion("FIRST_SEEN >", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENGreaterThanOrEqualTo(Date value) {
            addCriterion("FIRST_SEEN >=", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENLessThan(Date value) {
            addCriterion("FIRST_SEEN <", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENLessThanOrEqualTo(Date value) {
            addCriterion("FIRST_SEEN <=", value, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENIn(List<Date> values) {
            addCriterion("FIRST_SEEN in", values, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENNotIn(List<Date> values) {
            addCriterion("FIRST_SEEN not in", values, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENBetween(Date value1, Date value2) {
            addCriterion("FIRST_SEEN between", value1, value2, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_SEENNotBetween(Date value1, Date value2) {
            addCriterion("FIRST_SEEN not between", value1, value2, "FIRST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENIsNull() {
            addCriterion("LAST_SEEN is null");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENIsNotNull() {
            addCriterion("LAST_SEEN is not null");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENEqualTo(Date value) {
            addCriterion("LAST_SEEN =", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENNotEqualTo(Date value) {
            addCriterion("LAST_SEEN <>", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENGreaterThan(Date value) {
            addCriterion("LAST_SEEN >", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_SEEN >=", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENLessThan(Date value) {
            addCriterion("LAST_SEEN <", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENLessThanOrEqualTo(Date value) {
            addCriterion("LAST_SEEN <=", value, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENIn(List<Date> values) {
            addCriterion("LAST_SEEN in", values, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENNotIn(List<Date> values) {
            addCriterion("LAST_SEEN not in", values, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENBetween(Date value1, Date value2) {
            addCriterion("LAST_SEEN between", value1, value2, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_SEENNotBetween(Date value1, Date value2) {
            addCriterion("LAST_SEEN not between", value1, value2, "LAST_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENIsNull() {
            addCriterion("FIRST_ERROR_SEEN is null");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENIsNotNull() {
            addCriterion("FIRST_ERROR_SEEN is not null");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENEqualTo(Date value) {
            addCriterion("FIRST_ERROR_SEEN =", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENNotEqualTo(Date value) {
            addCriterion("FIRST_ERROR_SEEN <>", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENGreaterThan(Date value) {
            addCriterion("FIRST_ERROR_SEEN >", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENGreaterThanOrEqualTo(Date value) {
            addCriterion("FIRST_ERROR_SEEN >=", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENLessThan(Date value) {
            addCriterion("FIRST_ERROR_SEEN <", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENLessThanOrEqualTo(Date value) {
            addCriterion("FIRST_ERROR_SEEN <=", value, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENIn(List<Date> values) {
            addCriterion("FIRST_ERROR_SEEN in", values, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENNotIn(List<Date> values) {
            addCriterion("FIRST_ERROR_SEEN not in", values, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENBetween(Date value1, Date value2) {
            addCriterion("FIRST_ERROR_SEEN between", value1, value2, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andFIRST_ERROR_SEENNotBetween(Date value1, Date value2) {
            addCriterion("FIRST_ERROR_SEEN not between", value1, value2, "FIRST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENIsNull() {
            addCriterion("LAST_ERROR_SEEN is null");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENIsNotNull() {
            addCriterion("LAST_ERROR_SEEN is not null");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENEqualTo(Date value) {
            addCriterion("LAST_ERROR_SEEN =", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENNotEqualTo(Date value) {
            addCriterion("LAST_ERROR_SEEN <>", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENGreaterThan(Date value) {
            addCriterion("LAST_ERROR_SEEN >", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_ERROR_SEEN >=", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENLessThan(Date value) {
            addCriterion("LAST_ERROR_SEEN <", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENLessThanOrEqualTo(Date value) {
            addCriterion("LAST_ERROR_SEEN <=", value, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENIn(List<Date> values) {
            addCriterion("LAST_ERROR_SEEN in", values, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENNotIn(List<Date> values) {
            addCriterion("LAST_ERROR_SEEN not in", values, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENBetween(Date value1, Date value2) {
            addCriterion("LAST_ERROR_SEEN between", value1, value2, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }

        public Criteria andLAST_ERROR_SEENNotBetween(Date value1, Date value2) {
            addCriterion("LAST_ERROR_SEEN not between", value1, value2, "LAST_ERROR_SEEN");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table host_cache
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table host_cache
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}