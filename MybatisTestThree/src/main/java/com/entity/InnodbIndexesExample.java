package com.entity;

import java.util.ArrayList;
import java.util.List;

public class InnodbIndexesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public InnodbIndexesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andINDEX_IDIsNull() {
            addCriterion("INDEX_ID is null");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDIsNotNull() {
            addCriterion("INDEX_ID is not null");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDEqualTo(Long value) {
            addCriterion("INDEX_ID =", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDNotEqualTo(Long value) {
            addCriterion("INDEX_ID <>", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDGreaterThan(Long value) {
            addCriterion("INDEX_ID >", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDGreaterThanOrEqualTo(Long value) {
            addCriterion("INDEX_ID >=", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDLessThan(Long value) {
            addCriterion("INDEX_ID <", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDLessThanOrEqualTo(Long value) {
            addCriterion("INDEX_ID <=", value, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDIn(List<Long> values) {
            addCriterion("INDEX_ID in", values, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDNotIn(List<Long> values) {
            addCriterion("INDEX_ID not in", values, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDBetween(Long value1, Long value2) {
            addCriterion("INDEX_ID between", value1, value2, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andINDEX_IDNotBetween(Long value1, Long value2) {
            addCriterion("INDEX_ID not between", value1, value2, "INDEX_ID");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIsNull() {
            addCriterion("TABLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIsNotNull() {
            addCriterion("TABLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDEqualTo(Long value) {
            addCriterion("TABLE_ID =", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotEqualTo(Long value) {
            addCriterion("TABLE_ID <>", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThan(Long value) {
            addCriterion("TABLE_ID >", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID >=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThan(Long value) {
            addCriterion("TABLE_ID <", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID <=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIn(List<Long> values) {
            addCriterion("TABLE_ID in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotIn(List<Long> values) {
            addCriterion("TABLE_ID not in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID not between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTYPEIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTYPEIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTYPEEqualTo(Integer value) {
            addCriterion("TYPE =", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotEqualTo(Integer value) {
            addCriterion("TYPE <>", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEGreaterThan(Integer value) {
            addCriterion("TYPE >", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEGreaterThanOrEqualTo(Integer value) {
            addCriterion("TYPE >=", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPELessThan(Integer value) {
            addCriterion("TYPE <", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPELessThanOrEqualTo(Integer value) {
            addCriterion("TYPE <=", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEIn(List<Integer> values) {
            addCriterion("TYPE in", values, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotIn(List<Integer> values) {
            addCriterion("TYPE not in", values, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEBetween(Integer value1, Integer value2) {
            addCriterion("TYPE between", value1, value2, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotBetween(Integer value1, Integer value2) {
            addCriterion("TYPE not between", value1, value2, "TYPE");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSIsNull() {
            addCriterion("N_FIELDS is null");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSIsNotNull() {
            addCriterion("N_FIELDS is not null");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSEqualTo(Integer value) {
            addCriterion("N_FIELDS =", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSNotEqualTo(Integer value) {
            addCriterion("N_FIELDS <>", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSGreaterThan(Integer value) {
            addCriterion("N_FIELDS >", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSGreaterThanOrEqualTo(Integer value) {
            addCriterion("N_FIELDS >=", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSLessThan(Integer value) {
            addCriterion("N_FIELDS <", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSLessThanOrEqualTo(Integer value) {
            addCriterion("N_FIELDS <=", value, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSIn(List<Integer> values) {
            addCriterion("N_FIELDS in", values, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSNotIn(List<Integer> values) {
            addCriterion("N_FIELDS not in", values, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSBetween(Integer value1, Integer value2) {
            addCriterion("N_FIELDS between", value1, value2, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andN_FIELDSNotBetween(Integer value1, Integer value2) {
            addCriterion("N_FIELDS not between", value1, value2, "n_FIELDS");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOIsNull() {
            addCriterion("PAGE_NO is null");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOIsNotNull() {
            addCriterion("PAGE_NO is not null");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOEqualTo(Integer value) {
            addCriterion("PAGE_NO =", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NONotEqualTo(Integer value) {
            addCriterion("PAGE_NO <>", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOGreaterThan(Integer value) {
            addCriterion("PAGE_NO >", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOGreaterThanOrEqualTo(Integer value) {
            addCriterion("PAGE_NO >=", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOLessThan(Integer value) {
            addCriterion("PAGE_NO <", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOLessThanOrEqualTo(Integer value) {
            addCriterion("PAGE_NO <=", value, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOIn(List<Integer> values) {
            addCriterion("PAGE_NO in", values, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NONotIn(List<Integer> values) {
            addCriterion("PAGE_NO not in", values, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NOBetween(Integer value1, Integer value2) {
            addCriterion("PAGE_NO between", value1, value2, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andPAGE_NONotBetween(Integer value1, Integer value2) {
            addCriterion("PAGE_NO not between", value1, value2, "PAGE_NO");
            return (Criteria) this;
        }

        public Criteria andSPACEIsNull() {
            addCriterion("SPACE is null");
            return (Criteria) this;
        }

        public Criteria andSPACEIsNotNull() {
            addCriterion("SPACE is not null");
            return (Criteria) this;
        }

        public Criteria andSPACEEqualTo(Integer value) {
            addCriterion("SPACE =", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotEqualTo(Integer value) {
            addCriterion("SPACE <>", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEGreaterThan(Integer value) {
            addCriterion("SPACE >", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEGreaterThanOrEqualTo(Integer value) {
            addCriterion("SPACE >=", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACELessThan(Integer value) {
            addCriterion("SPACE <", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACELessThanOrEqualTo(Integer value) {
            addCriterion("SPACE <=", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEIn(List<Integer> values) {
            addCriterion("SPACE in", values, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotIn(List<Integer> values) {
            addCriterion("SPACE not in", values, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEBetween(Integer value1, Integer value2) {
            addCriterion("SPACE between", value1, value2, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotBetween(Integer value1, Integer value2) {
            addCriterion("SPACE not between", value1, value2, "SPACE");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDIsNull() {
            addCriterion("MERGE_THRESHOLD is null");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDIsNotNull() {
            addCriterion("MERGE_THRESHOLD is not null");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDEqualTo(Integer value) {
            addCriterion("MERGE_THRESHOLD =", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDNotEqualTo(Integer value) {
            addCriterion("MERGE_THRESHOLD <>", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDGreaterThan(Integer value) {
            addCriterion("MERGE_THRESHOLD >", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDGreaterThanOrEqualTo(Integer value) {
            addCriterion("MERGE_THRESHOLD >=", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDLessThan(Integer value) {
            addCriterion("MERGE_THRESHOLD <", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDLessThanOrEqualTo(Integer value) {
            addCriterion("MERGE_THRESHOLD <=", value, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDIn(List<Integer> values) {
            addCriterion("MERGE_THRESHOLD in", values, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDNotIn(List<Integer> values) {
            addCriterion("MERGE_THRESHOLD not in", values, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDBetween(Integer value1, Integer value2) {
            addCriterion("MERGE_THRESHOLD between", value1, value2, "MERGE_THRESHOLD");
            return (Criteria) this;
        }

        public Criteria andMERGE_THRESHOLDNotBetween(Integer value1, Integer value2) {
            addCriterion("MERGE_THRESHOLD not between", value1, value2, "MERGE_THRESHOLD");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_INDEXES
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}