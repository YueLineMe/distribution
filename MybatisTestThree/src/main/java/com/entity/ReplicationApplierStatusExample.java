package com.entity;

import java.util.ArrayList;
import java.util.List;

public class ReplicationApplierStatusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public ReplicationApplierStatusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCHANNEL_NAMEIsNull() {
            addCriterion("CHANNEL_NAME is null");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEIsNotNull() {
            addCriterion("CHANNEL_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEEqualTo(String value) {
            addCriterion("CHANNEL_NAME =", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMENotEqualTo(String value) {
            addCriterion("CHANNEL_NAME <>", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEGreaterThan(String value) {
            addCriterion("CHANNEL_NAME >", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("CHANNEL_NAME >=", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMELessThan(String value) {
            addCriterion("CHANNEL_NAME <", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMELessThanOrEqualTo(String value) {
            addCriterion("CHANNEL_NAME <=", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMELike(String value) {
            addCriterion("CHANNEL_NAME like", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMENotLike(String value) {
            addCriterion("CHANNEL_NAME not like", value, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEIn(List<String> values) {
            addCriterion("CHANNEL_NAME in", values, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMENotIn(List<String> values) {
            addCriterion("CHANNEL_NAME not in", values, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMEBetween(String value1, String value2) {
            addCriterion("CHANNEL_NAME between", value1, value2, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andCHANNEL_NAMENotBetween(String value1, String value2) {
            addCriterion("CHANNEL_NAME not between", value1, value2, "CHANNEL_NAME");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEIsNull() {
            addCriterion("SERVICE_STATE is null");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEIsNotNull() {
            addCriterion("SERVICE_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEEqualTo(String value) {
            addCriterion("SERVICE_STATE =", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATENotEqualTo(String value) {
            addCriterion("SERVICE_STATE <>", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEGreaterThan(String value) {
            addCriterion("SERVICE_STATE >", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEGreaterThanOrEqualTo(String value) {
            addCriterion("SERVICE_STATE >=", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATELessThan(String value) {
            addCriterion("SERVICE_STATE <", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATELessThanOrEqualTo(String value) {
            addCriterion("SERVICE_STATE <=", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATELike(String value) {
            addCriterion("SERVICE_STATE like", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATENotLike(String value) {
            addCriterion("SERVICE_STATE not like", value, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEIn(List<String> values) {
            addCriterion("SERVICE_STATE in", values, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATENotIn(List<String> values) {
            addCriterion("SERVICE_STATE not in", values, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATEBetween(String value1, String value2) {
            addCriterion("SERVICE_STATE between", value1, value2, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andSERVICE_STATENotBetween(String value1, String value2) {
            addCriterion("SERVICE_STATE not between", value1, value2, "SERVICE_STATE");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYIsNull() {
            addCriterion("REMAINING_DELAY is null");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYIsNotNull() {
            addCriterion("REMAINING_DELAY is not null");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYEqualTo(Integer value) {
            addCriterion("REMAINING_DELAY =", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYNotEqualTo(Integer value) {
            addCriterion("REMAINING_DELAY <>", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYGreaterThan(Integer value) {
            addCriterion("REMAINING_DELAY >", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYGreaterThanOrEqualTo(Integer value) {
            addCriterion("REMAINING_DELAY >=", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYLessThan(Integer value) {
            addCriterion("REMAINING_DELAY <", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYLessThanOrEqualTo(Integer value) {
            addCriterion("REMAINING_DELAY <=", value, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYIn(List<Integer> values) {
            addCriterion("REMAINING_DELAY in", values, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYNotIn(List<Integer> values) {
            addCriterion("REMAINING_DELAY not in", values, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYBetween(Integer value1, Integer value2) {
            addCriterion("REMAINING_DELAY between", value1, value2, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andREMAINING_DELAYNotBetween(Integer value1, Integer value2) {
            addCriterion("REMAINING_DELAY not between", value1, value2, "REMAINING_DELAY");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESIsNull() {
            addCriterion("COUNT_TRANSACTIONS_RETRIES is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESIsNotNull() {
            addCriterion("COUNT_TRANSACTIONS_RETRIES is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESEqualTo(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES =", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESNotEqualTo(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES <>", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESGreaterThan(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES >", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES >=", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESLessThan(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES <", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES <=", value, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESIn(List<Long> values) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES in", values, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESNotIn(List<Long> values) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES not in", values, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESBetween(Long value1, Long value2) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES between", value1, value2, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }

        public Criteria andCOUNT_TRANSACTIONS_RETRIESNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_TRANSACTIONS_RETRIES not between", value1, value2, "COUNT_TRANSACTIONS_RETRIES");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table replication_applier_status
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table replication_applier_status
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}