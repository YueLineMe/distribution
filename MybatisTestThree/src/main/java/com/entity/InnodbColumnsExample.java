package com.entity;

import java.util.ArrayList;
import java.util.List;

public class InnodbColumnsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public InnodbColumnsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTABLE_IDIsNull() {
            addCriterion("TABLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIsNotNull() {
            addCriterion("TABLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDEqualTo(Long value) {
            addCriterion("TABLE_ID =", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotEqualTo(Long value) {
            addCriterion("TABLE_ID <>", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThan(Long value) {
            addCriterion("TABLE_ID >", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID >=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThan(Long value) {
            addCriterion("TABLE_ID <", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID <=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIn(List<Long> values) {
            addCriterion("TABLE_ID in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotIn(List<Long> values) {
            addCriterion("TABLE_ID not in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID not between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andPOSIsNull() {
            addCriterion("POS is null");
            return (Criteria) this;
        }

        public Criteria andPOSIsNotNull() {
            addCriterion("POS is not null");
            return (Criteria) this;
        }

        public Criteria andPOSEqualTo(Long value) {
            addCriterion("POS =", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSNotEqualTo(Long value) {
            addCriterion("POS <>", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSGreaterThan(Long value) {
            addCriterion("POS >", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSGreaterThanOrEqualTo(Long value) {
            addCriterion("POS >=", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSLessThan(Long value) {
            addCriterion("POS <", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSLessThanOrEqualTo(Long value) {
            addCriterion("POS <=", value, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSIn(List<Long> values) {
            addCriterion("POS in", values, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSNotIn(List<Long> values) {
            addCriterion("POS not in", values, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSBetween(Long value1, Long value2) {
            addCriterion("POS between", value1, value2, "POS");
            return (Criteria) this;
        }

        public Criteria andPOSNotBetween(Long value1, Long value2) {
            addCriterion("POS not between", value1, value2, "POS");
            return (Criteria) this;
        }

        public Criteria andMTYPEIsNull() {
            addCriterion("MTYPE is null");
            return (Criteria) this;
        }

        public Criteria andMTYPEIsNotNull() {
            addCriterion("MTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andMTYPEEqualTo(Integer value) {
            addCriterion("MTYPE =", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPENotEqualTo(Integer value) {
            addCriterion("MTYPE <>", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPEGreaterThan(Integer value) {
            addCriterion("MTYPE >", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPEGreaterThanOrEqualTo(Integer value) {
            addCriterion("MTYPE >=", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPELessThan(Integer value) {
            addCriterion("MTYPE <", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPELessThanOrEqualTo(Integer value) {
            addCriterion("MTYPE <=", value, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPEIn(List<Integer> values) {
            addCriterion("MTYPE in", values, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPENotIn(List<Integer> values) {
            addCriterion("MTYPE not in", values, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPEBetween(Integer value1, Integer value2) {
            addCriterion("MTYPE between", value1, value2, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andMTYPENotBetween(Integer value1, Integer value2) {
            addCriterion("MTYPE not between", value1, value2, "MTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPEIsNull() {
            addCriterion("PRTYPE is null");
            return (Criteria) this;
        }

        public Criteria andPRTYPEIsNotNull() {
            addCriterion("PRTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andPRTYPEEqualTo(Integer value) {
            addCriterion("PRTYPE =", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPENotEqualTo(Integer value) {
            addCriterion("PRTYPE <>", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPEGreaterThan(Integer value) {
            addCriterion("PRTYPE >", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPEGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRTYPE >=", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPELessThan(Integer value) {
            addCriterion("PRTYPE <", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPELessThanOrEqualTo(Integer value) {
            addCriterion("PRTYPE <=", value, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPEIn(List<Integer> values) {
            addCriterion("PRTYPE in", values, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPENotIn(List<Integer> values) {
            addCriterion("PRTYPE not in", values, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPEBetween(Integer value1, Integer value2) {
            addCriterion("PRTYPE between", value1, value2, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andPRTYPENotBetween(Integer value1, Integer value2) {
            addCriterion("PRTYPE not between", value1, value2, "PRTYPE");
            return (Criteria) this;
        }

        public Criteria andLENIsNull() {
            addCriterion("LEN is null");
            return (Criteria) this;
        }

        public Criteria andLENIsNotNull() {
            addCriterion("LEN is not null");
            return (Criteria) this;
        }

        public Criteria andLENEqualTo(Integer value) {
            addCriterion("LEN =", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENNotEqualTo(Integer value) {
            addCriterion("LEN <>", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENGreaterThan(Integer value) {
            addCriterion("LEN >", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENGreaterThanOrEqualTo(Integer value) {
            addCriterion("LEN >=", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENLessThan(Integer value) {
            addCriterion("LEN <", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENLessThanOrEqualTo(Integer value) {
            addCriterion("LEN <=", value, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENIn(List<Integer> values) {
            addCriterion("LEN in", values, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENNotIn(List<Integer> values) {
            addCriterion("LEN not in", values, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENBetween(Integer value1, Integer value2) {
            addCriterion("LEN between", value1, value2, "LEN");
            return (Criteria) this;
        }

        public Criteria andLENNotBetween(Integer value1, Integer value2) {
            addCriterion("LEN not between", value1, value2, "LEN");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTIsNull() {
            addCriterion("HAS_DEFAULT is null");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTIsNotNull() {
            addCriterion("HAS_DEFAULT is not null");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTEqualTo(Integer value) {
            addCriterion("HAS_DEFAULT =", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTNotEqualTo(Integer value) {
            addCriterion("HAS_DEFAULT <>", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTGreaterThan(Integer value) {
            addCriterion("HAS_DEFAULT >", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTGreaterThanOrEqualTo(Integer value) {
            addCriterion("HAS_DEFAULT >=", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTLessThan(Integer value) {
            addCriterion("HAS_DEFAULT <", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTLessThanOrEqualTo(Integer value) {
            addCriterion("HAS_DEFAULT <=", value, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTIn(List<Integer> values) {
            addCriterion("HAS_DEFAULT in", values, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTNotIn(List<Integer> values) {
            addCriterion("HAS_DEFAULT not in", values, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTBetween(Integer value1, Integer value2) {
            addCriterion("HAS_DEFAULT between", value1, value2, "HAS_DEFAULT");
            return (Criteria) this;
        }

        public Criteria andHAS_DEFAULTNotBetween(Integer value1, Integer value2) {
            addCriterion("HAS_DEFAULT not between", value1, value2, "HAS_DEFAULT");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_COLUMNS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}