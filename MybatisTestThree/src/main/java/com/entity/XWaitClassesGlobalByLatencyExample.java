package com.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class XWaitClassesGlobalByLatencyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public XWaitClassesGlobalByLatencyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEvent_classIsNull() {
            addCriterion("event_class is null");
            return (Criteria) this;
        }

        public Criteria andEvent_classIsNotNull() {
            addCriterion("event_class is not null");
            return (Criteria) this;
        }

        public Criteria andEvent_classEqualTo(String value) {
            addCriterion("event_class =", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classNotEqualTo(String value) {
            addCriterion("event_class <>", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classGreaterThan(String value) {
            addCriterion("event_class >", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classGreaterThanOrEqualTo(String value) {
            addCriterion("event_class >=", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classLessThan(String value) {
            addCriterion("event_class <", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classLessThanOrEqualTo(String value) {
            addCriterion("event_class <=", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classLike(String value) {
            addCriterion("event_class like", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classNotLike(String value) {
            addCriterion("event_class not like", value, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classIn(List<String> values) {
            addCriterion("event_class in", values, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classNotIn(List<String> values) {
            addCriterion("event_class not in", values, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classBetween(String value1, String value2) {
            addCriterion("event_class between", value1, value2, "event_class");
            return (Criteria) this;
        }

        public Criteria andEvent_classNotBetween(String value1, String value2) {
            addCriterion("event_class not between", value1, value2, "event_class");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("total is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("total is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(BigDecimal value) {
            addCriterion("total =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(BigDecimal value) {
            addCriterion("total <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(BigDecimal value) {
            addCriterion("total >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(BigDecimal value) {
            addCriterion("total <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<BigDecimal> values) {
            addCriterion("total in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<BigDecimal> values) {
            addCriterion("total not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyIsNull() {
            addCriterion("total_latency is null");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyIsNotNull() {
            addCriterion("total_latency is not null");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyEqualTo(BigDecimal value) {
            addCriterion("total_latency =", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyNotEqualTo(BigDecimal value) {
            addCriterion("total_latency <>", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyGreaterThan(BigDecimal value) {
            addCriterion("total_latency >", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_latency >=", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyLessThan(BigDecimal value) {
            addCriterion("total_latency <", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_latency <=", value, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyIn(List<BigDecimal> values) {
            addCriterion("total_latency in", values, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyNotIn(List<BigDecimal> values) {
            addCriterion("total_latency not in", values, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_latency between", value1, value2, "total_latency");
            return (Criteria) this;
        }

        public Criteria andTotal_latencyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_latency not between", value1, value2, "total_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyIsNull() {
            addCriterion("min_latency is null");
            return (Criteria) this;
        }

        public Criteria andMin_latencyIsNotNull() {
            addCriterion("min_latency is not null");
            return (Criteria) this;
        }

        public Criteria andMin_latencyEqualTo(Long value) {
            addCriterion("min_latency =", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyNotEqualTo(Long value) {
            addCriterion("min_latency <>", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyGreaterThan(Long value) {
            addCriterion("min_latency >", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyGreaterThanOrEqualTo(Long value) {
            addCriterion("min_latency >=", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyLessThan(Long value) {
            addCriterion("min_latency <", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyLessThanOrEqualTo(Long value) {
            addCriterion("min_latency <=", value, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyIn(List<Long> values) {
            addCriterion("min_latency in", values, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyNotIn(List<Long> values) {
            addCriterion("min_latency not in", values, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyBetween(Long value1, Long value2) {
            addCriterion("min_latency between", value1, value2, "min_latency");
            return (Criteria) this;
        }

        public Criteria andMin_latencyNotBetween(Long value1, Long value2) {
            addCriterion("min_latency not between", value1, value2, "min_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyIsNull() {
            addCriterion("avg_latency is null");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyIsNotNull() {
            addCriterion("avg_latency is not null");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyEqualTo(BigDecimal value) {
            addCriterion("avg_latency =", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyNotEqualTo(BigDecimal value) {
            addCriterion("avg_latency <>", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyGreaterThan(BigDecimal value) {
            addCriterion("avg_latency >", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("avg_latency >=", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyLessThan(BigDecimal value) {
            addCriterion("avg_latency <", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("avg_latency <=", value, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyIn(List<BigDecimal> values) {
            addCriterion("avg_latency in", values, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyNotIn(List<BigDecimal> values) {
            addCriterion("avg_latency not in", values, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("avg_latency between", value1, value2, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andAvg_latencyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("avg_latency not between", value1, value2, "avg_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyIsNull() {
            addCriterion("max_latency is null");
            return (Criteria) this;
        }

        public Criteria andMax_latencyIsNotNull() {
            addCriterion("max_latency is not null");
            return (Criteria) this;
        }

        public Criteria andMax_latencyEqualTo(Long value) {
            addCriterion("max_latency =", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyNotEqualTo(Long value) {
            addCriterion("max_latency <>", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyGreaterThan(Long value) {
            addCriterion("max_latency >", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyGreaterThanOrEqualTo(Long value) {
            addCriterion("max_latency >=", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyLessThan(Long value) {
            addCriterion("max_latency <", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyLessThanOrEqualTo(Long value) {
            addCriterion("max_latency <=", value, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyIn(List<Long> values) {
            addCriterion("max_latency in", values, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyNotIn(List<Long> values) {
            addCriterion("max_latency not in", values, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyBetween(Long value1, Long value2) {
            addCriterion("max_latency between", value1, value2, "max_latency");
            return (Criteria) this;
        }

        public Criteria andMax_latencyNotBetween(Long value1, Long value2) {
            addCriterion("max_latency not between", value1, value2, "max_latency");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$wait_classes_global_by_latency
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}