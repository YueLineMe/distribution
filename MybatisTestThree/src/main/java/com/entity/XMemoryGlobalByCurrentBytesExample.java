package com.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class XMemoryGlobalByCurrentBytesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public XMemoryGlobalByCurrentBytesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEvent_nameIsNull() {
            addCriterion("event_name is null");
            return (Criteria) this;
        }

        public Criteria andEvent_nameIsNotNull() {
            addCriterion("event_name is not null");
            return (Criteria) this;
        }

        public Criteria andEvent_nameEqualTo(String value) {
            addCriterion("event_name =", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameNotEqualTo(String value) {
            addCriterion("event_name <>", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameGreaterThan(String value) {
            addCriterion("event_name >", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameGreaterThanOrEqualTo(String value) {
            addCriterion("event_name >=", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameLessThan(String value) {
            addCriterion("event_name <", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameLessThanOrEqualTo(String value) {
            addCriterion("event_name <=", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameLike(String value) {
            addCriterion("event_name like", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameNotLike(String value) {
            addCriterion("event_name not like", value, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameIn(List<String> values) {
            addCriterion("event_name in", values, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameNotIn(List<String> values) {
            addCriterion("event_name not in", values, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameBetween(String value1, String value2) {
            addCriterion("event_name between", value1, value2, "event_name");
            return (Criteria) this;
        }

        public Criteria andEvent_nameNotBetween(String value1, String value2) {
            addCriterion("event_name not between", value1, value2, "event_name");
            return (Criteria) this;
        }

        public Criteria andCurrent_countIsNull() {
            addCriterion("current_count is null");
            return (Criteria) this;
        }

        public Criteria andCurrent_countIsNotNull() {
            addCriterion("current_count is not null");
            return (Criteria) this;
        }

        public Criteria andCurrent_countEqualTo(Long value) {
            addCriterion("current_count =", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countNotEqualTo(Long value) {
            addCriterion("current_count <>", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countGreaterThan(Long value) {
            addCriterion("current_count >", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countGreaterThanOrEqualTo(Long value) {
            addCriterion("current_count >=", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countLessThan(Long value) {
            addCriterion("current_count <", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countLessThanOrEqualTo(Long value) {
            addCriterion("current_count <=", value, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countIn(List<Long> values) {
            addCriterion("current_count in", values, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countNotIn(List<Long> values) {
            addCriterion("current_count not in", values, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countBetween(Long value1, Long value2) {
            addCriterion("current_count between", value1, value2, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_countNotBetween(Long value1, Long value2) {
            addCriterion("current_count not between", value1, value2, "current_count");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocIsNull() {
            addCriterion("current_alloc is null");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocIsNotNull() {
            addCriterion("current_alloc is not null");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocEqualTo(Long value) {
            addCriterion("current_alloc =", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocNotEqualTo(Long value) {
            addCriterion("current_alloc <>", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocGreaterThan(Long value) {
            addCriterion("current_alloc >", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocGreaterThanOrEqualTo(Long value) {
            addCriterion("current_alloc >=", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocLessThan(Long value) {
            addCriterion("current_alloc <", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocLessThanOrEqualTo(Long value) {
            addCriterion("current_alloc <=", value, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocIn(List<Long> values) {
            addCriterion("current_alloc in", values, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocNotIn(List<Long> values) {
            addCriterion("current_alloc not in", values, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocBetween(Long value1, Long value2) {
            addCriterion("current_alloc between", value1, value2, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_allocNotBetween(Long value1, Long value2) {
            addCriterion("current_alloc not between", value1, value2, "current_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocIsNull() {
            addCriterion("current_avg_alloc is null");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocIsNotNull() {
            addCriterion("current_avg_alloc is not null");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocEqualTo(BigDecimal value) {
            addCriterion("current_avg_alloc =", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocNotEqualTo(BigDecimal value) {
            addCriterion("current_avg_alloc <>", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocGreaterThan(BigDecimal value) {
            addCriterion("current_avg_alloc >", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("current_avg_alloc >=", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocLessThan(BigDecimal value) {
            addCriterion("current_avg_alloc <", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocLessThanOrEqualTo(BigDecimal value) {
            addCriterion("current_avg_alloc <=", value, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocIn(List<BigDecimal> values) {
            addCriterion("current_avg_alloc in", values, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocNotIn(List<BigDecimal> values) {
            addCriterion("current_avg_alloc not in", values, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_avg_alloc between", value1, value2, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andCurrent_avg_allocNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_avg_alloc not between", value1, value2, "current_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_countIsNull() {
            addCriterion("high_count is null");
            return (Criteria) this;
        }

        public Criteria andHigh_countIsNotNull() {
            addCriterion("high_count is not null");
            return (Criteria) this;
        }

        public Criteria andHigh_countEqualTo(Long value) {
            addCriterion("high_count =", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countNotEqualTo(Long value) {
            addCriterion("high_count <>", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countGreaterThan(Long value) {
            addCriterion("high_count >", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countGreaterThanOrEqualTo(Long value) {
            addCriterion("high_count >=", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countLessThan(Long value) {
            addCriterion("high_count <", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countLessThanOrEqualTo(Long value) {
            addCriterion("high_count <=", value, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countIn(List<Long> values) {
            addCriterion("high_count in", values, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countNotIn(List<Long> values) {
            addCriterion("high_count not in", values, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countBetween(Long value1, Long value2) {
            addCriterion("high_count between", value1, value2, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_countNotBetween(Long value1, Long value2) {
            addCriterion("high_count not between", value1, value2, "high_count");
            return (Criteria) this;
        }

        public Criteria andHigh_allocIsNull() {
            addCriterion("high_alloc is null");
            return (Criteria) this;
        }

        public Criteria andHigh_allocIsNotNull() {
            addCriterion("high_alloc is not null");
            return (Criteria) this;
        }

        public Criteria andHigh_allocEqualTo(Long value) {
            addCriterion("high_alloc =", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocNotEqualTo(Long value) {
            addCriterion("high_alloc <>", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocGreaterThan(Long value) {
            addCriterion("high_alloc >", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocGreaterThanOrEqualTo(Long value) {
            addCriterion("high_alloc >=", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocLessThan(Long value) {
            addCriterion("high_alloc <", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocLessThanOrEqualTo(Long value) {
            addCriterion("high_alloc <=", value, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocIn(List<Long> values) {
            addCriterion("high_alloc in", values, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocNotIn(List<Long> values) {
            addCriterion("high_alloc not in", values, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocBetween(Long value1, Long value2) {
            addCriterion("high_alloc between", value1, value2, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_allocNotBetween(Long value1, Long value2) {
            addCriterion("high_alloc not between", value1, value2, "high_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocIsNull() {
            addCriterion("high_avg_alloc is null");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocIsNotNull() {
            addCriterion("high_avg_alloc is not null");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocEqualTo(BigDecimal value) {
            addCriterion("high_avg_alloc =", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocNotEqualTo(BigDecimal value) {
            addCriterion("high_avg_alloc <>", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocGreaterThan(BigDecimal value) {
            addCriterion("high_avg_alloc >", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("high_avg_alloc >=", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocLessThan(BigDecimal value) {
            addCriterion("high_avg_alloc <", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocLessThanOrEqualTo(BigDecimal value) {
            addCriterion("high_avg_alloc <=", value, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocIn(List<BigDecimal> values) {
            addCriterion("high_avg_alloc in", values, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocNotIn(List<BigDecimal> values) {
            addCriterion("high_avg_alloc not in", values, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("high_avg_alloc between", value1, value2, "high_avg_alloc");
            return (Criteria) this;
        }

        public Criteria andHigh_avg_allocNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("high_avg_alloc not between", value1, value2, "high_avg_alloc");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x$memory_global_by_current_bytes
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}