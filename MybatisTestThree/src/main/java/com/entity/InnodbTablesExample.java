package com.entity;

import java.util.ArrayList;
import java.util.List;

public class InnodbTablesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public InnodbTablesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTABLE_IDIsNull() {
            addCriterion("TABLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIsNotNull() {
            addCriterion("TABLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDEqualTo(Long value) {
            addCriterion("TABLE_ID =", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotEqualTo(Long value) {
            addCriterion("TABLE_ID <>", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThan(Long value) {
            addCriterion("TABLE_ID >", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDGreaterThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID >=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThan(Long value) {
            addCriterion("TABLE_ID <", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDLessThanOrEqualTo(Long value) {
            addCriterion("TABLE_ID <=", value, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDIn(List<Long> values) {
            addCriterion("TABLE_ID in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotIn(List<Long> values) {
            addCriterion("TABLE_ID not in", values, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andTABLE_IDNotBetween(Long value1, Long value2) {
            addCriterion("TABLE_ID not between", value1, value2, "TABLE_ID");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andFLAGIsNull() {
            addCriterion("FLAG is null");
            return (Criteria) this;
        }

        public Criteria andFLAGIsNotNull() {
            addCriterion("FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andFLAGEqualTo(Integer value) {
            addCriterion("FLAG =", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotEqualTo(Integer value) {
            addCriterion("FLAG <>", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGGreaterThan(Integer value) {
            addCriterion("FLAG >", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGGreaterThanOrEqualTo(Integer value) {
            addCriterion("FLAG >=", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGLessThan(Integer value) {
            addCriterion("FLAG <", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGLessThanOrEqualTo(Integer value) {
            addCriterion("FLAG <=", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGIn(List<Integer> values) {
            addCriterion("FLAG in", values, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotIn(List<Integer> values) {
            addCriterion("FLAG not in", values, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGBetween(Integer value1, Integer value2) {
            addCriterion("FLAG between", value1, value2, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotBetween(Integer value1, Integer value2) {
            addCriterion("FLAG not between", value1, value2, "FLAG");
            return (Criteria) this;
        }

        public Criteria andN_COLSIsNull() {
            addCriterion("N_COLS is null");
            return (Criteria) this;
        }

        public Criteria andN_COLSIsNotNull() {
            addCriterion("N_COLS is not null");
            return (Criteria) this;
        }

        public Criteria andN_COLSEqualTo(Integer value) {
            addCriterion("N_COLS =", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSNotEqualTo(Integer value) {
            addCriterion("N_COLS <>", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSGreaterThan(Integer value) {
            addCriterion("N_COLS >", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSGreaterThanOrEqualTo(Integer value) {
            addCriterion("N_COLS >=", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSLessThan(Integer value) {
            addCriterion("N_COLS <", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSLessThanOrEqualTo(Integer value) {
            addCriterion("N_COLS <=", value, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSIn(List<Integer> values) {
            addCriterion("N_COLS in", values, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSNotIn(List<Integer> values) {
            addCriterion("N_COLS not in", values, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSBetween(Integer value1, Integer value2) {
            addCriterion("N_COLS between", value1, value2, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andN_COLSNotBetween(Integer value1, Integer value2) {
            addCriterion("N_COLS not between", value1, value2, "n_COLS");
            return (Criteria) this;
        }

        public Criteria andSPACEIsNull() {
            addCriterion("SPACE is null");
            return (Criteria) this;
        }

        public Criteria andSPACEIsNotNull() {
            addCriterion("SPACE is not null");
            return (Criteria) this;
        }

        public Criteria andSPACEEqualTo(Long value) {
            addCriterion("SPACE =", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotEqualTo(Long value) {
            addCriterion("SPACE <>", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEGreaterThan(Long value) {
            addCriterion("SPACE >", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEGreaterThanOrEqualTo(Long value) {
            addCriterion("SPACE >=", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACELessThan(Long value) {
            addCriterion("SPACE <", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACELessThanOrEqualTo(Long value) {
            addCriterion("SPACE <=", value, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEIn(List<Long> values) {
            addCriterion("SPACE in", values, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotIn(List<Long> values) {
            addCriterion("SPACE not in", values, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACEBetween(Long value1, Long value2) {
            addCriterion("SPACE between", value1, value2, "SPACE");
            return (Criteria) this;
        }

        public Criteria andSPACENotBetween(Long value1, Long value2) {
            addCriterion("SPACE not between", value1, value2, "SPACE");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATIsNull() {
            addCriterion("ROW_FORMAT is null");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATIsNotNull() {
            addCriterion("ROW_FORMAT is not null");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATEqualTo(String value) {
            addCriterion("ROW_FORMAT =", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATNotEqualTo(String value) {
            addCriterion("ROW_FORMAT <>", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATGreaterThan(String value) {
            addCriterion("ROW_FORMAT >", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATGreaterThanOrEqualTo(String value) {
            addCriterion("ROW_FORMAT >=", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATLessThan(String value) {
            addCriterion("ROW_FORMAT <", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATLessThanOrEqualTo(String value) {
            addCriterion("ROW_FORMAT <=", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATLike(String value) {
            addCriterion("ROW_FORMAT like", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATNotLike(String value) {
            addCriterion("ROW_FORMAT not like", value, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATIn(List<String> values) {
            addCriterion("ROW_FORMAT in", values, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATNotIn(List<String> values) {
            addCriterion("ROW_FORMAT not in", values, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATBetween(String value1, String value2) {
            addCriterion("ROW_FORMAT between", value1, value2, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andROW_FORMATNotBetween(String value1, String value2) {
            addCriterion("ROW_FORMAT not between", value1, value2, "ROW_FORMAT");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEIsNull() {
            addCriterion("ZIP_PAGE_SIZE is null");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEIsNotNull() {
            addCriterion("ZIP_PAGE_SIZE is not null");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEEqualTo(Integer value) {
            addCriterion("ZIP_PAGE_SIZE =", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZENotEqualTo(Integer value) {
            addCriterion("ZIP_PAGE_SIZE <>", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEGreaterThan(Integer value) {
            addCriterion("ZIP_PAGE_SIZE >", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEGreaterThanOrEqualTo(Integer value) {
            addCriterion("ZIP_PAGE_SIZE >=", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZELessThan(Integer value) {
            addCriterion("ZIP_PAGE_SIZE <", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZELessThanOrEqualTo(Integer value) {
            addCriterion("ZIP_PAGE_SIZE <=", value, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEIn(List<Integer> values) {
            addCriterion("ZIP_PAGE_SIZE in", values, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZENotIn(List<Integer> values) {
            addCriterion("ZIP_PAGE_SIZE not in", values, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZEBetween(Integer value1, Integer value2) {
            addCriterion("ZIP_PAGE_SIZE between", value1, value2, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andZIP_PAGE_SIZENotBetween(Integer value1, Integer value2) {
            addCriterion("ZIP_PAGE_SIZE not between", value1, value2, "ZIP_PAGE_SIZE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEIsNull() {
            addCriterion("SPACE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEIsNotNull() {
            addCriterion("SPACE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEEqualTo(String value) {
            addCriterion("SPACE_TYPE =", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPENotEqualTo(String value) {
            addCriterion("SPACE_TYPE <>", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEGreaterThan(String value) {
            addCriterion("SPACE_TYPE >", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEGreaterThanOrEqualTo(String value) {
            addCriterion("SPACE_TYPE >=", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPELessThan(String value) {
            addCriterion("SPACE_TYPE <", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPELessThanOrEqualTo(String value) {
            addCriterion("SPACE_TYPE <=", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPELike(String value) {
            addCriterion("SPACE_TYPE like", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPENotLike(String value) {
            addCriterion("SPACE_TYPE not like", value, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEIn(List<String> values) {
            addCriterion("SPACE_TYPE in", values, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPENotIn(List<String> values) {
            addCriterion("SPACE_TYPE not in", values, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPEBetween(String value1, String value2) {
            addCriterion("SPACE_TYPE between", value1, value2, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andSPACE_TYPENotBetween(String value1, String value2) {
            addCriterion("SPACE_TYPE not between", value1, value2, "SPACE_TYPE");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSIsNull() {
            addCriterion("INSTANT_COLS is null");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSIsNotNull() {
            addCriterion("INSTANT_COLS is not null");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSEqualTo(Integer value) {
            addCriterion("INSTANT_COLS =", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSNotEqualTo(Integer value) {
            addCriterion("INSTANT_COLS <>", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSGreaterThan(Integer value) {
            addCriterion("INSTANT_COLS >", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSGreaterThanOrEqualTo(Integer value) {
            addCriterion("INSTANT_COLS >=", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSLessThan(Integer value) {
            addCriterion("INSTANT_COLS <", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSLessThanOrEqualTo(Integer value) {
            addCriterion("INSTANT_COLS <=", value, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSIn(List<Integer> values) {
            addCriterion("INSTANT_COLS in", values, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSNotIn(List<Integer> values) {
            addCriterion("INSTANT_COLS not in", values, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSBetween(Integer value1, Integer value2) {
            addCriterion("INSTANT_COLS between", value1, value2, "INSTANT_COLS");
            return (Criteria) this;
        }

        public Criteria andINSTANT_COLSNotBetween(Integer value1, Integer value2) {
            addCriterion("INSTANT_COLS not between", value1, value2, "INSTANT_COLS");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNODB_TABLES
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}