package com.entity;

import java.util.ArrayList;
import java.util.List;

public class EventsStatementsHistogramGlobalExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public EventsStatementsHistogramGlobalExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBUCKET_NUMBERIsNull() {
            addCriterion("BUCKET_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERIsNotNull() {
            addCriterion("BUCKET_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBEREqualTo(Integer value) {
            addCriterion("BUCKET_NUMBER =", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERNotEqualTo(Integer value) {
            addCriterion("BUCKET_NUMBER <>", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERGreaterThan(Integer value) {
            addCriterion("BUCKET_NUMBER >", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERGreaterThanOrEqualTo(Integer value) {
            addCriterion("BUCKET_NUMBER >=", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERLessThan(Integer value) {
            addCriterion("BUCKET_NUMBER <", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERLessThanOrEqualTo(Integer value) {
            addCriterion("BUCKET_NUMBER <=", value, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERIn(List<Integer> values) {
            addCriterion("BUCKET_NUMBER in", values, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERNotIn(List<Integer> values) {
            addCriterion("BUCKET_NUMBER not in", values, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERBetween(Integer value1, Integer value2) {
            addCriterion("BUCKET_NUMBER between", value1, value2, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_NUMBERNotBetween(Integer value1, Integer value2) {
            addCriterion("BUCKET_NUMBER not between", value1, value2, "BUCKET_NUMBER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWIsNull() {
            addCriterion("BUCKET_TIMER_LOW is null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWIsNotNull() {
            addCriterion("BUCKET_TIMER_LOW is not null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_LOW =", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWNotEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_LOW <>", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWGreaterThan(Long value) {
            addCriterion("BUCKET_TIMER_LOW >", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWGreaterThanOrEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_LOW >=", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWLessThan(Long value) {
            addCriterion("BUCKET_TIMER_LOW <", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWLessThanOrEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_LOW <=", value, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWIn(List<Long> values) {
            addCriterion("BUCKET_TIMER_LOW in", values, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWNotIn(List<Long> values) {
            addCriterion("BUCKET_TIMER_LOW not in", values, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWBetween(Long value1, Long value2) {
            addCriterion("BUCKET_TIMER_LOW between", value1, value2, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_LOWNotBetween(Long value1, Long value2) {
            addCriterion("BUCKET_TIMER_LOW not between", value1, value2, "BUCKET_TIMER_LOW");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHIsNull() {
            addCriterion("BUCKET_TIMER_HIGH is null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHIsNotNull() {
            addCriterion("BUCKET_TIMER_HIGH is not null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_HIGH =", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHNotEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_HIGH <>", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHGreaterThan(Long value) {
            addCriterion("BUCKET_TIMER_HIGH >", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHGreaterThanOrEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_HIGH >=", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHLessThan(Long value) {
            addCriterion("BUCKET_TIMER_HIGH <", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHLessThanOrEqualTo(Long value) {
            addCriterion("BUCKET_TIMER_HIGH <=", value, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHIn(List<Long> values) {
            addCriterion("BUCKET_TIMER_HIGH in", values, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHNotIn(List<Long> values) {
            addCriterion("BUCKET_TIMER_HIGH not in", values, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHBetween(Long value1, Long value2) {
            addCriterion("BUCKET_TIMER_HIGH between", value1, value2, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andBUCKET_TIMER_HIGHNotBetween(Long value1, Long value2) {
            addCriterion("BUCKET_TIMER_HIGH not between", value1, value2, "BUCKET_TIMER_HIGH");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETIsNull() {
            addCriterion("COUNT_BUCKET is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETIsNotNull() {
            addCriterion("COUNT_BUCKET is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETEqualTo(Long value) {
            addCriterion("COUNT_BUCKET =", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETNotEqualTo(Long value) {
            addCriterion("COUNT_BUCKET <>", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETGreaterThan(Long value) {
            addCriterion("COUNT_BUCKET >", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_BUCKET >=", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETLessThan(Long value) {
            addCriterion("COUNT_BUCKET <", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_BUCKET <=", value, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETIn(List<Long> values) {
            addCriterion("COUNT_BUCKET in", values, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETNotIn(List<Long> values) {
            addCriterion("COUNT_BUCKET not in", values, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETBetween(Long value1, Long value2) {
            addCriterion("COUNT_BUCKET between", value1, value2, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKETNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_BUCKET not between", value1, value2, "COUNT_BUCKET");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERIsNull() {
            addCriterion("COUNT_BUCKET_AND_LOWER is null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERIsNotNull() {
            addCriterion("COUNT_BUCKET_AND_LOWER is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWEREqualTo(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER =", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERNotEqualTo(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER <>", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERGreaterThan(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER >", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER >=", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERLessThan(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER <", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERLessThanOrEqualTo(Long value) {
            addCriterion("COUNT_BUCKET_AND_LOWER <=", value, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERIn(List<Long> values) {
            addCriterion("COUNT_BUCKET_AND_LOWER in", values, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERNotIn(List<Long> values) {
            addCriterion("COUNT_BUCKET_AND_LOWER not in", values, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERBetween(Long value1, Long value2) {
            addCriterion("COUNT_BUCKET_AND_LOWER between", value1, value2, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andCOUNT_BUCKET_AND_LOWERNotBetween(Long value1, Long value2) {
            addCriterion("COUNT_BUCKET_AND_LOWER not between", value1, value2, "COUNT_BUCKET_AND_LOWER");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEIsNull() {
            addCriterion("BUCKET_QUANTILE is null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEIsNotNull() {
            addCriterion("BUCKET_QUANTILE is not null");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEEqualTo(Double value) {
            addCriterion("BUCKET_QUANTILE =", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILENotEqualTo(Double value) {
            addCriterion("BUCKET_QUANTILE <>", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEGreaterThan(Double value) {
            addCriterion("BUCKET_QUANTILE >", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEGreaterThanOrEqualTo(Double value) {
            addCriterion("BUCKET_QUANTILE >=", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILELessThan(Double value) {
            addCriterion("BUCKET_QUANTILE <", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILELessThanOrEqualTo(Double value) {
            addCriterion("BUCKET_QUANTILE <=", value, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEIn(List<Double> values) {
            addCriterion("BUCKET_QUANTILE in", values, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILENotIn(List<Double> values) {
            addCriterion("BUCKET_QUANTILE not in", values, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILEBetween(Double value1, Double value2) {
            addCriterion("BUCKET_QUANTILE between", value1, value2, "BUCKET_QUANTILE");
            return (Criteria) this;
        }

        public Criteria andBUCKET_QUANTILENotBetween(Double value1, Double value2) {
            addCriterion("BUCKET_QUANTILE not between", value1, value2, "BUCKET_QUANTILE");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table events_statements_histogram_global
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}