<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.EcsRegFieldsMapper">
  <resultMap id="BaseResultMap" type="com.entity.EcsRegFields">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="reg_field_name" jdbcType="VARCHAR" property="reg_field_name" />
    <result column="dis_order" jdbcType="TINYINT" property="dis_order" />
    <result column="display" jdbcType="BIT" property="display" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="is_need" jdbcType="BIT" property="is_need" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ecs_reg_fields
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <insert id="insert" parameterType="com.entity.EcsRegFields">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Byte">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ecs_reg_fields (id, reg_field_name, dis_order, 
      display, type, is_need)
    values (#{id,jdbcType=TINYINT}, #{reg_field_name,jdbcType=VARCHAR}, #{dis_order,jdbcType=TINYINT}, 
      #{display,jdbcType=BIT}, #{type,jdbcType=BIT}, #{is_need,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.entity.EcsRegFields">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ecs_reg_fields
    set reg_field_name = #{reg_field_name,jdbcType=VARCHAR},
      dis_order = #{dis_order,jdbcType=TINYINT},
      display = #{display,jdbcType=BIT},
      type = #{type,jdbcType=BIT},
      is_need = #{is_need,jdbcType=BIT}
    where id = #{id,jdbcType=TINYINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, reg_field_name, dis_order, display, type, is_need
    from ecs_reg_fields
    where id = #{id,jdbcType=TINYINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, reg_field_name, dis_order, display, type, is_need
    from ecs_reg_fields
  </select>
</mapper>